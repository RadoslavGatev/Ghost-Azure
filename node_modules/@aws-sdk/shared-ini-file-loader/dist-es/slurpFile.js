import { promises as fsPromises } from "fs";
var readFile = fsPromises.readFile;
var fileStatusHash = {};
export var slurpFile = function (path) {
    return new Promise(function (resolve, reject) {
        if (!fileStatusHash[path]) {
            fileStatusHash[path] = { isReading: true, contents: "", requestQueue: [] };
            fileStatusHash[path].requestQueue.push({ resolve: resolve, reject: reject });
            readFile(path, "utf8")
                .then(function (data) {
                fileStatusHash[path].isReading = false;
                fileStatusHash[path].contents = data;
                var requestQueue = fileStatusHash[path].requestQueue;
                while (requestQueue.length) {
                    var resolve_1 = requestQueue.pop().resolve;
                    resolve_1(data);
                }
            })
                .catch(function (err) {
                fileStatusHash[path].isReading = false;
                var requestQueue = fileStatusHash[path].requestQueue;
                while (requestQueue.length) {
                    var reject_1 = requestQueue.pop().reject;
                    reject_1(err);
                }
            });
        }
        else if (fileStatusHash[path].isReading) {
            fileStatusHash[path].requestQueue.push({ resolve: resolve, reject: reject });
        }
        else {
            resolve(fileStatusHash[path].contents);
        }
    });
};
