{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["export type { Attachment } from './attachment';\nexport type { AllowedBaggageKeys, Baggage, BaggageObj } from './baggage';\nexport type { Breadcrumb, BreadcrumbHint } from './breadcrumb';\nexport type { Client } from './client';\nexport type { ClientReport, Outcome, EventDropReason } from './clientreport';\nexport type { Context, Contexts } from './context';\nexport type { DataCategory } from './datacategory';\nexport type { DsnComponents, DsnLike, DsnProtocol } from './dsn';\nexport type { DebugImage, DebugImageType, DebugMeta } from './debugMeta';\nexport type {\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  ClientReportEnvelope,\n  ClientReportItem,\n  DynamicSamplingContext,\n  Envelope,\n  EnvelopeItemType,\n  EnvelopeItem,\n  EventEnvelope,\n  EventEnvelopeHeaders,\n  EventItem,\n  SessionEnvelope,\n  SessionItem,\n  UserFeedbackItem,\n} from './envelope';\nexport type { ExtendedError } from './error';\nexport type { Event, EventHint } from './event';\nexport type { EventProcessor } from './eventprocessor';\nexport type { Exception } from './exception';\nexport type { Extra, Extras } from './extra';\n// This is a dummy export, purely for the purpose of loading `globals.ts`, in order to take advantage of its side effect\n// of putting variables into the global namespace. See\n// https://www.typescriptlang.org/docs/handbook/declaration-files/templates/global-modifying-module-d-ts.html.\nexport type {} from './globals';\nexport type { Hub } from './hub';\nexport type { Integration, IntegrationClass } from './integration';\nexport type { Mechanism } from './mechanism';\nexport type { ExtractedNodeRequestData, HttpHeaderValue, Primitive, WorkerLocation } from './misc';\nexport type { ClientOptions, Options } from './options';\nexport type { Package } from './package';\nexport type { PolymorphicEvent } from './polymorphics';\nexport type { QueryParams, Request } from './request';\nexport type { Runtime } from './runtime';\nexport type { CaptureContext, Scope, ScopeContext } from './scope';\nexport type { SdkInfo } from './sdkinfo';\nexport type { SdkMetadata } from './sdkmetadata';\nexport type {\n  SessionAggregates,\n  AggregationCounts,\n  Session,\n  SessionContext,\n  SessionStatus,\n  RequestSession,\n  RequestSessionStatus,\n  SessionFlusherLike,\n  SerializedSession,\n} from './session';\n\n// eslint-disable-next-line deprecation/deprecation\nexport type { Severity, SeverityLevel } from './severity';\nexport type { Span, SpanContext } from './span';\nexport type { StackFrame } from './stackframe';\nexport type { Stacktrace, StackParser, StackLineParser, StackLineParserFn } from './stacktrace';\nexport type { TextEncoderInternal } from './textencoder';\nexport type { TracePropagationTargets } from './tracing';\nexport type {\n  CustomSamplingContext,\n  SamplingContext,\n  TraceparentData,\n  Transaction,\n  TransactionContext,\n  TransactionMetadata,\n  TransactionSamplingMethod,\n  TransactionSource,\n} from './transaction';\nexport type {\n  DurationUnit,\n  InformationUnit,\n  FractionUnit,\n  MeasurementUnit,\n  NoneUnit,\n  Measurements,\n} from './measurement';\nexport type { Thread } from './thread';\nexport type {\n  Transport,\n  TransportRequest,\n  TransportMakeRequestResponse,\n  InternalBaseTransportOptions,\n  BaseTransportOptions,\n  TransportRequestExecutor,\n} from './transport';\nexport type { User, UserFeedback } from './user';\nexport type { WrappedFunction } from './wrappedfunction';\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAUA;;AAQA;AACA;;AAQA;AACA;AACA"}