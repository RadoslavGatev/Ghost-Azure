{"version":3,"file":"onunhandledrejection.js","sources":["../../../src/integrations/onunhandledrejection.ts"],"sourcesContent":["import type { Scope } from '@sentry/core';\nimport { getCurrentHub } from '@sentry/core';\nimport type { Integration } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\n\nimport { logAndExitProcess } from './utils/errorhandling';\n\ntype UnhandledRejectionMode = 'none' | 'warn' | 'strict';\n\n/** Global Promise Rejection handler */\nexport class OnUnhandledRejection implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'OnUnhandledRejection';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = OnUnhandledRejection.id;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    private readonly _options: {\n      /**\n       * Option deciding what to do after capturing unhandledRejection,\n       * that mimicks behavior of node's --unhandled-rejection flag.\n       */\n      mode: UnhandledRejectionMode;\n    } = { mode: 'warn' },\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    global.process.on('unhandledRejection', this.sendUnhandledPromise.bind(this));\n  }\n\n  /**\n   * Send an exception with reason\n   * @param reason string\n   * @param promise promise\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n  public sendUnhandledPromise(reason: any, promise: any): void {\n    const hub = getCurrentHub();\n    if (hub.getIntegration(OnUnhandledRejection)) {\n      hub.withScope((scope: Scope) => {\n        scope.setExtra('unhandledPromiseRejection', true);\n        hub.captureException(reason, {\n          originalException: promise,\n          data: { mechanism: { handled: false, type: 'onunhandledrejection' } },\n        });\n      });\n    }\n    this._handleRejection(reason);\n  }\n\n  /**\n   * Handler for `mode` option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _handleRejection(reason: any): void {\n    // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n    const rejectionWarning =\n      'This error originated either by ' +\n      'throwing inside of an async function without a catch block, ' +\n      'or by rejecting a promise which was not handled with .catch().' +\n      ' The promise rejected with the reason:';\n\n    /* eslint-disable no-console */\n    if (this._options.mode === 'warn') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        console.error(reason && reason.stack ? reason.stack : reason);\n      });\n    } else if (this._options.mode === 'strict') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n      });\n      logAndExitProcess(reason);\n    }\n    /* eslint-enable no-console */\n  }\n}\n"],"names":[],"mappings":";;;;AASA;AACA,MAAA,oBAAA,EAAA;AACA;AACA;AACA;AACA,GAAA,OAAA,YAAA,GAAA,CAAA,IAAA,CAAA,EAAA,GAAA,uBAAA,CAAA;AACA;AACA;AACA;AACA;AACA,GAAA,MAAA,GAAA,CAAA,IAAA,CAAA,IAAA,GAAA,oBAAA,CAAA,GAAA,CAAA;AACA;AACA;AACA;AACA;AACA,GAAA,WAAA;AACA,MAAA,QAAA;;AAMA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA;AACA,IAAA,CAAA,IAAA,CAAA,QAAA,GAAA,QAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA;AACA;AACA,GAAA,SAAA,GAAA;AACA,IAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAA,oBAAA,CAAA,MAAA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA,GAAA,aAAA,EAAA,CAAA;AACA,IAAA,IAAA,GAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,EAAA;AACA,MAAA,GAAA,CAAA,SAAA,CAAA,CAAA,KAAA,KAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,2BAAA,EAAA,IAAA,CAAA,CAAA;AACA,QAAA,GAAA,CAAA,gBAAA,CAAA,MAAA,EAAA;AACA,UAAA,iBAAA,EAAA,OAAA;AACA,UAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,sBAAA,EAAA,EAAA;AACA,SAAA,CAAA,CAAA;AACA,OAAA,CAAA,CAAA;AACA,KAAA;AACA,IAAA,IAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA;AACA,GAAA,gBAAA,CAAA,MAAA,EAAA;AACA;AACA,IAAA,MAAA,gBAAA;AACA,MAAA,kCAAA;AACA,MAAA,8DAAA;AACA,MAAA,gEAAA;AACA,MAAA,wCAAA,CAAA;AACA;AACA;AACA,IAAA,IAAA,IAAA,CAAA,QAAA,CAAA,IAAA,KAAA,MAAA,EAAA;AACA,MAAA,cAAA,CAAA,MAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA;AACA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,MAAA,IAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,CAAA;AACA,OAAA,CAAA,CAAA;AACA,KAAA,MAAA,IAAA,IAAA,CAAA,QAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,MAAA,cAAA,CAAA,MAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA;AACA,OAAA,CAAA,CAAA;AACA,MAAA,iBAAA,CAAA,MAAA,CAAA,CAAA;AACA,KAAA;AACA;AACA,GAAA;AACA,CAAA,CAAA,oBAAA,CAAA,YAAA,EAAA;;;;"}