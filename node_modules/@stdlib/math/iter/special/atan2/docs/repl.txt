
{{alias}}( y, x )
    Returns an iterator which iteratively computes the angle in the plane (in
    radians) between the positive x-axis and the ray from (0,0) to the point
    (x,y).

    The length of the returned iterator is equal to the length of the shortest
    provided iterator. In other words, the returned iterator ends once *one* of
    the provided iterators ends.

    If provided a numeric value as an iterator argument, the value is broadcast
    as an infinite iterator which always returns the provided value.

    If an environment supports Symbol.iterator and provided iterators are
    iterable, the returned iterator is iterable.

    Parameters
    ----------
    y: Object|number
        Input iterator.

    x: Object|number
        Input iterator.

    Returns
    -------
    iterator: Object
        Iterator.

    iterator.next(): Function
        Returns an iterator protocol-compliant object containing the next
        iterated value (if one exists) and a boolean flag indicating whether the
        iterator is finished.

    iterator.return( [value] ): Function
        Finishes an iterator and returns a provided value.

    Examples
    --------
    > var x = {{alias:@stdlib/random/iter/uniform}}( -2.0, 2.0 );
    > var y = {{alias:@stdlib/random/iter/uniform}}( -2.0, 2.0 );
    > var it = {{alias}}( y, x );
    > var r = it.next().value
    <number>
    > r = it.next().value
    <number>

    See Also
    --------

