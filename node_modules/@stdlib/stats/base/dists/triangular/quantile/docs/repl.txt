
{{alias}}( p, a, b, c )
    Evaluates the quantile function for a triangular distribution with minimum
    support `a`, maximum support `b`, and mode `c` at a value `x`.

    If `p < 0` or `p > 1`, the function returns `NaN`.

    If the condition `a <= c <= b` is not satisfied, the function returns `NaN`.

    If either `a`, `b`, or `c` is `NaN`, the function returns `NaN`.

    Parameters
    ----------
    p: number
        Input probability.

    a: number
        Minimum support.

    b: number
        Maximum support.

    c: number
        Mode.

    Returns
    -------
    out: number
        Evaluated quantile function.

    Examples
    --------
    > var y = {{alias}}( 0.9, -1.0, 1.0, 0.0 )
    ~0.553
    > y = {{alias}}( 0.1, -1.0, 1.0, 0.5 )
    ~-0.452
    > y = {{alias}}( 0.1, -20.0, 0.0, -2.0 )
    -14.0
    > y = {{alias}}( 0.8, 0.0, 20.0, 0.0 )
    ~11.056

    > y = {{alias}}( 1.1, -1.0, 1.0, 0.0 )
    NaN
    > y = {{alias}}( -0.1, -1.0, 1.0, 0.0 )
    NaN

    > y = {{alias}}( NaN, 0.0, 1.0, 0.5 )
    NaN
    > y = {{alias}}( 0.3, NaN, 1.0, 0.5 )
    NaN
    > y = {{alias}}( 0.3, 0.0, NaN, 0.5 )
    NaN
    > y = {{alias}}( 0.3, 1.0, 0.0, NaN )
    NaN

    > y = {{alias}}( 0.3, 1.0, 0.0, 1.5 )
    NaN


{{alias}}.factory( a, b, c )
    Returns a function for evaluating the quantile function of a triangular
    distribution with minimum support `a`, maximum support `b`, and mode `c`.

    Parameters
    ----------
    a: number
        Minimum support.

    b: number
        Maximum support.

    c: number
        Mode.

    Returns
    -------
    quantile: Function
        Quantile function.

    Examples
    --------
    > var myquantile = {{alias}}.factory( 2.0, 4.0, 2.5 );
    > var y = myquantile( 0.4 )
    ~2.658
    > y = myquantile( 0.8 )
    ~3.225

    See Also
    --------


