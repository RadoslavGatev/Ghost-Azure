{"version":3,"file":"FileWriter.js","sourceRoot":"","sources":["../../Bootstrap/FileWriter.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport * as os from \"os\";\r\nimport * as DataModel from \"./DataModel\";\r\nimport * as FileHelpers from \"./Helpers/FileHelpers\";\r\n\r\nexport interface FileWriterOptions {\r\n    append: boolean; // Overwrite or append on file write (false)\r\n    deleteOnExit: boolean; // (true)\r\n    sizeLimit: number; // (10 KB)\r\n    renamePolicy: \"rolling\" | \"overwrite\" | \"stop\"; // What to do with file when it exceeds time/size limits\r\n    chmod: number; // Linux only\r\n}\r\n\r\nexport const homedir = FileHelpers.homedir;\r\n\r\nexport class FileWriter implements DataModel.AgentLogger {\r\n    public callback = (_err: Error) => { }; // no-op\r\n    private _ready = false;\r\n    private _options: FileWriterOptions;\r\n    private static _fullpathsToDelete: string[] = [];\r\n    private static _listenerAttached = false;\r\n    private static DEFAULT_OPTIONS: FileWriterOptions = {\r\n        append: false,\r\n        deleteOnExit: true,\r\n        sizeLimit: 10*1024,\r\n        renamePolicy: \"stop\",\r\n        chmod: 0o644 // rw/r/r\r\n    }\r\n\r\n    public static isNodeVersionCompatible() {\r\n        const majVer = process.versions.node.split(\".\")[0];\r\n        return parseInt(majVer) >= 1;\r\n    }\r\n\r\n    // leave at \"keep at single file only\", \"write up to certain size limit\", \"clear old file on process startup\"\r\n    constructor(private _filepath: string, private _filename: string, options?: Partial<FileWriterOptions>) {\r\n        this._options = { ...FileWriter.DEFAULT_OPTIONS, ...options };\r\n        this._ready = FileWriter.isNodeVersionCompatible() && FileHelpers.makeStatusDirs(this._filepath);\r\n        if (this._options.deleteOnExit) {\r\n            FileWriter._addCloseHandler();\r\n            FileWriter._fullpathsToDelete.push(path.join(this._filepath, this._filename));\r\n        }\r\n    }\r\n\r\n    public log(message: any) {\r\n        if (this._ready) {\r\n            let data = typeof message === \"object\"\r\n                ? JSON.stringify(message)\r\n                : message.toString();\r\n\r\n            // Check if existing file needs to be renamed\r\n            this._shouldRenameFile((err, shouldRename) => {\r\n                if (err) return;\r\n\r\n                if (shouldRename) {\r\n                    if (this._options.renamePolicy === \"rolling\") {\r\n                        FileHelpers.renameCurrentFile(this._filepath, this._filename, (renameErr, renamedFullpath) => {\r\n                            if (renameErr) return;\r\n                            FileWriter._fullpathsToDelete.push(renamedFullpath);\r\n                            this._options.append\r\n                                ? this._appendFile(data + \"\\n\")\r\n                                : this._writeFile(data);\r\n                        });\r\n                    } else if (this._options.renamePolicy === \"overwrite\") {\r\n                        // Clear the current file\r\n                        this._writeFile(data);\r\n                    } else if (this._options.renamePolicy === \"stop\") {\r\n                        // Stop future logging\r\n                        this._ready = false;\r\n                    }\r\n                } else {\r\n                    this._options.append\r\n                    ? this._appendFile(data + \"\\n\")\r\n                    : this._writeFile(data);\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    public error(message: any) {\r\n        this.log(message);\r\n    }\r\n\r\n    private _appendFile(message: string) {\r\n        const fullpath = path.join(this._filepath, this._filename);\r\n        fs.appendFile(fullpath, message, (err) => {\r\n            this.callback(err);\r\n        });\r\n    }\r\n\r\n    private _writeFile(message: string) {\r\n        const fullpath = path.join(this._filepath, this._filename);\r\n        fs.writeFile(fullpath, message, { mode: this._options.chmod }, this.callback);\r\n    }\r\n\r\n    private static _addCloseHandler() {\r\n        if (!FileWriter._listenerAttached) {\r\n            process.on(\"exit\", () => {\r\n                FileWriter._fullpathsToDelete.forEach((filename) => {\r\n                    try {\r\n                        fs.unlinkSync(filename);\r\n                    } catch (err) { /** ignore errors */ }\r\n                });\r\n            });\r\n            FileWriter._listenerAttached = true;\r\n        }\r\n    }\r\n\r\n    private _shouldRenameFile(callback?: (err: Error | null, shouldRename?: boolean) => void): void {\r\n        const fullpath = path.join(this._filepath, this._filename);\r\n        fs.stat(fullpath, (err, stats) => {\r\n            if (err) {\r\n                if (err.code === \"ENOENT\" && typeof callback === \"function\") {\r\n                    callback(null, false);\r\n                } else if (typeof callback === \"function\") {\r\n                    callback(err);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (stats.size > this._options.sizeLimit) {\r\n                callback(null, true);\r\n            } else {\r\n                const createDate = new Date(stats.birthtime);\r\n                const currentDate = new Date();\r\n                const result = (\r\n                    createDate.getUTCDate() !== currentDate.getUTCDate() ||\r\n                    createDate.getUTCMonth() !== currentDate.getUTCMonth() ||\r\n                    createDate.getUTCFullYear() !== currentDate.getUTCFullYear()\r\n                );\r\n                callback(null, result);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}