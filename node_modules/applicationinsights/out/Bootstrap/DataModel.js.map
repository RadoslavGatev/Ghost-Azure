{"version":3,"file":"DataModel.js","sourceRoot":"","sources":["../../Bootstrap/DataModel.ts"],"names":[],"mappings":";;AASC,CAAC","sourcesContent":["export interface AgentLogger {\r\n    log(message?: any, ...optional: any[]): void;\r\n    error(message?: any, ...optional: any[]): void;\r\n}\r\n\r\nexport const enum SeverityLevel {\r\n    ERROR = \"ERROR\",\r\n    WARN = \"WARN\",\r\n    INFO = \"INFO\"\r\n};\r\n\r\nexport interface DiagnosticLog {\r\n    /**\r\n     * UTC\r\n     */\r\n    time: string;\r\n\r\n    /**\r\n     * Log severity, INFO, WARN, ERROR\r\n     */\r\n    level: SeverityLevel;\r\n\r\n    /**\r\n     * The logger writing this message. Usually the fully-qualified class or package name\r\n     */\r\n    logger: string;\r\n\r\n    /**\r\n     * The log message\r\n     */\r\n    message: string;\r\n\r\n    /**\r\n     * Exception (as string)\r\n     */\r\n    exception?: string\r\n\r\n    /**\r\n     * Any custom data related to the error/application/operation. Each field should have a string value\r\n     * Examples: operation, siteName, ikey, extensionVersion, sdkVersion, subscriptionId\r\n     */\r\n    properties: { [key: string]: string };\r\n}\r\n"]}