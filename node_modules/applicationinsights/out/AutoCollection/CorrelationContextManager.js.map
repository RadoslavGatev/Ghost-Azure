{"version":3,"file":"CorrelationContextManager.js","sourceRoot":"","sources":["../../AutoCollection/CorrelationContextManager.ts"],"names":[],"mappings":"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","sourcesContent":["import events = require(\"events\");\r\nimport Logging = require(\"../Library/Logging\");\r\n\r\nimport * as DiagChannel from \"./diagnostic-channel/initialization\";\r\nimport * as azureFunctionsTypes from \"../Library/Functions\";\r\n\r\n// Don't reference modules from these directly. Use only for types.\r\nimport * as cls from \"cls-hooked\";\r\nimport * as http from \"http\";\r\nimport Traceparent = require(\"../Library/Traceparent\");\r\nimport Tracestate = require(\"../Library/Tracestate\");\r\nimport HttpRequestParser = require(\"./HttpRequestParser\");\r\nimport { ISpanContext } from \"diagnostic-channel\";\r\n\r\nexport interface CustomProperties {\r\n    /**\r\n     * Get a custom property from the correlation context\r\n     */\r\n    getProperty(key: string): string;\r\n    /**\r\n     * Store a custom property in the correlation context.\r\n     * Do not store sensitive information here.\r\n     * Properties stored here are exposed via outgoing HTTP headers for correlating data cross-component.\r\n     * The characters ',' and '=' are disallowed within keys or values.\r\n     */\r\n    setProperty(key: string, value: string): void;\r\n}\r\n\r\nexport interface PrivateCustomProperties extends CustomProperties {\r\n    addHeaderData(header: string): void;\r\n    serializeToHeader(): string;\r\n}\r\n\r\nexport interface CorrelationContext {\r\n    operation: {\r\n        name: string;\r\n        id: string;\r\n        parentId: string; // Always used for dependencies, may be ignored in favor of incoming headers for requests\r\n        traceparent?: Traceparent; // w3c context trace\r\n        tracestate?: Tracestate; // w3c context state\r\n    };\r\n\r\n    /** Do not store sensitive information here.\r\n     *  Properties here are exposed via outgoing HTTP headers for correlating data cross-component.\r\n     */\r\n    customProperties: CustomProperties\r\n}\r\n\r\nexport class CorrelationContextManager {\r\n    private static enabled: boolean = false;\r\n    private static hasEverEnabled: boolean = false;\r\n    private static forceClsHooked: boolean = undefined; // true: use cls-hooked, false: use cls, undefined: choose based on node version\r\n    private static session: cls.Namespace;\r\n    private static cls: typeof cls;\r\n    private static CONTEXT_NAME = \"ApplicationInsights-Context\"\r\n\r\n    /**\r\n     *  Provides the current Context.\r\n     *  The context is the most recent one entered into for the current\r\n     *  logical chain of execution, including across asynchronous calls.\r\n     */\r\n    public static getCurrentContext(): CorrelationContext | null {\r\n        if (!CorrelationContextManager.enabled) {\r\n            return null;\r\n        }\r\n        const context = CorrelationContextManager.session.get(CorrelationContextManager.CONTEXT_NAME);\r\n\r\n        if (context === undefined) { // cast undefined to null\r\n            return null;\r\n        }\r\n        return context;\r\n    }\r\n\r\n    /**\r\n     *  A helper to generate objects conforming to the CorrelationContext interface\r\n     */\r\n    public static generateContextObject(operationId: string, parentId?: string, operationName?: string, correlationContextHeader?: string, traceparent?: Traceparent, tracestate?: Tracestate): CorrelationContext {\r\n        parentId = parentId || operationId;\r\n\r\n        if (this.enabled) {\r\n            return {\r\n                operation: {\r\n                    name: operationName,\r\n                    id: operationId,\r\n                    parentId: parentId,\r\n                    traceparent,\r\n                    tracestate\r\n                },\r\n                customProperties: new CustomPropertiesImpl(correlationContextHeader)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static spanToContextObject(spanContext: ISpanContext, parentId?: string, name?: string) {\r\n        const traceContext = new Traceparent();\r\n        traceContext.traceId = spanContext.traceId;\r\n        traceContext.spanId = spanContext.spanId;\r\n        traceContext.traceFlag = spanContext.traceFlags || Traceparent.DEFAULT_TRACE_FLAG;\r\n        traceContext.parentId = parentId;\r\n        return CorrelationContextManager.generateContextObject(traceContext.traceId, traceContext.parentId, name, null, traceContext);\r\n    }\r\n\r\n    /**\r\n     *  Runs a function inside a given Context.\r\n     *  All logical children of the execution path that entered this Context\r\n     *  will receive this Context object on calls to GetCurrentContext.\r\n     */\r\n    public static runWithContext(context: CorrelationContext, fn: ()=>any): any {\r\n        if (CorrelationContextManager.enabled) {\r\n            return CorrelationContextManager.session.bind(fn, {[CorrelationContextManager.CONTEXT_NAME]: context})();\r\n        } else {\r\n            return fn();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrapper for cls-hooked bindEmitter method\r\n     */\r\n    public static wrapEmitter(emitter: events.EventEmitter): void {\r\n        if (CorrelationContextManager.enabled) {\r\n            CorrelationContextManager.session.bindEmitter(emitter);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Patches a callback to restore the correct Context when getCurrentContext\r\n     *  is run within it. This is necessary if automatic correlation fails to work\r\n     *  with user-included libraries.\r\n     *\r\n     *  The supplied callback will be given the same context that was present for\r\n     *  the call to wrapCallback.  */\r\n    public static wrapCallback<T extends Function>(fn: T, context?: CorrelationContext): T {\r\n        if (CorrelationContextManager.enabled) {\r\n            return CorrelationContextManager.session.bind(fn, context ? {\r\n                [CorrelationContextManager.CONTEXT_NAME]: context\r\n            } : undefined);\r\n        }\r\n        return fn;\r\n    }\r\n\r\n    /**\r\n     *  Enables the CorrelationContextManager.\r\n     */\r\n    public static enable(forceClsHooked?: boolean) {\r\n        if (this.enabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isNodeVersionCompatible()) {\r\n            this.enabled = false;\r\n            return;\r\n        }\r\n        if (!CorrelationContextManager.hasEverEnabled) {\r\n            this.forceClsHooked = forceClsHooked;\r\n            this.hasEverEnabled = true;\r\n\r\n            if (typeof this.cls === \"undefined\") {\r\n                if ((CorrelationContextManager.forceClsHooked === true) || (CorrelationContextManager.forceClsHooked === undefined && CorrelationContextManager.shouldUseClsHooked())) {\r\n                    this.cls = require('cls-hooked');\r\n                } else {\r\n                    this.cls = require('continuation-local-storage');\r\n                }\r\n            }\r\n\r\n            CorrelationContextManager.session = this.cls.createNamespace(\"AI-CLS-Session\");\r\n\r\n            DiagChannel.registerContextPreservation((cb) => {\r\n                return CorrelationContextManager.session.bind(cb);\r\n            });\r\n        }\r\n\r\n        this.enabled = true;\r\n    }\r\n\r\n    public static startOperation(context: azureFunctionsTypes.Context | (http.IncomingMessage | azureFunctionsTypes.HttpRequest) | ISpanContext, request?: azureFunctionsTypes.HttpRequest | string): CorrelationContext | null {\r\n        const traceContext = context && (context as azureFunctionsTypes.Context).traceContext || null;\r\n        const spanContext = context && (context as ISpanContext).traceId\r\n            ? context as ISpanContext\r\n            : null;\r\n        const headers = context && (context as http.IncomingMessage | azureFunctionsTypes.HttpRequest).headers;\r\n\r\n        if (spanContext) {\r\n            const traceparent = new Traceparent(`00-${spanContext.traceId}-${spanContext.spanId}-01`);\r\n            const tracestate = new Tracestate(spanContext.tracestate);\r\n            const correlationContext = CorrelationContextManager.generateContextObject(\r\n                spanContext.traceId,\r\n                `|${spanContext.traceId}.${spanContext.spanId}.`,\r\n                typeof request === \"string\" ? request : \"\",\r\n                undefined,\r\n                traceparent,\r\n                tracestate,\r\n            );\r\n            return correlationContext;\r\n        }\r\n\r\n        // AzFunction TraceContext available\r\n        if (traceContext) {\r\n            const traceparent = new Traceparent(traceContext.traceparent);\r\n            const tracestate = new Tracestate(traceContext.tracestate);\r\n            const parser = typeof request === \"object\"\r\n              ? new HttpRequestParser(request)\r\n              : null;\r\n            const correlationContext = CorrelationContextManager.generateContextObject(\r\n                traceparent.traceId,\r\n                traceparent.parentId,\r\n                typeof request === \"string\"\r\n                    ? request\r\n                    : parser.getOperationName({}),\r\n                parser && parser.getCorrelationContextHeader() || undefined,\r\n                traceparent,\r\n                tracestate,\r\n            );\r\n\r\n            return correlationContext;\r\n        }\r\n\r\n        // No TraceContext available, parse as http.IncomingMessage\r\n        if (headers) {\r\n            const traceparent = new Traceparent(headers.traceparent);\r\n            const tracestate = new Tracestate(headers.tracestate);\r\n            const parser = new HttpRequestParser(context as http.IncomingMessage | azureFunctionsTypes.HttpRequest);\r\n            const correlationContext = CorrelationContextManager.generateContextObject(\r\n                traceparent.traceId,\r\n                traceparent.parentId,\r\n                parser.getOperationName({}),\r\n                parser.getCorrelationContextHeader(),\r\n                traceparent,\r\n                tracestate,\r\n            );\r\n\r\n            return correlationContext;\r\n        }\r\n\r\n        Logging.warn(\"startOperation was called with invalid arguments\", arguments);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *  Disables the CorrelationContextManager.\r\n     */\r\n    public static disable() {\r\n        this.enabled = false;\r\n    }\r\n\r\n    /**\r\n     * Reset the namespace\r\n     */\r\n    public static reset() {\r\n        if (CorrelationContextManager.hasEverEnabled) {\r\n            CorrelationContextManager.session = null;\r\n            CorrelationContextManager.session = this.cls.createNamespace('AI-CLS-Session');\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Reports if CorrelationContextManager is able to run in this environment\r\n     */\r\n    public static isNodeVersionCompatible() {\r\n        var nodeVer = process.versions.node.split(\".\");\r\n        return parseInt(nodeVer[0]) > 3 || (parseInt(nodeVer[0]) > 2 && parseInt(nodeVer[1]) > 2);\r\n\r\n    }\r\n\r\n    /**\r\n     * We only want to use cls-hooked when it uses async_hooks api (8.2+), else\r\n     * use async-listener (plain -cls)\r\n     */\r\n    public static shouldUseClsHooked() {\r\n        var nodeVer = process.versions.node.split(\".\");\r\n        return (parseInt(nodeVer[0]) > 8) || (parseInt(nodeVer[0]) >= 8 && parseInt(nodeVer[1]) >= 2);\r\n    }\r\n\r\n    /**\r\n     * A TypeError is triggered by cls-hooked for node [8.0, 8.2)\r\n     * @internal Used in tests only\r\n     */\r\n    public static canUseClsHooked() {\r\n        var nodeVer = process.versions.node.split(\".\");\r\n        var greater800 = (parseInt(nodeVer[0]) > 8) || (parseInt(nodeVer[0]) >= 8 && parseInt(nodeVer[1]) >= 0);\r\n        var less820 = (parseInt(nodeVer[0]) < 8) || (parseInt(nodeVer[0]) <= 8 && parseInt(nodeVer[1]) < 2)\r\n        var greater470 = parseInt(nodeVer[0]) > 4 || (parseInt(nodeVer[0]) >= 4 && parseInt(nodeVer[1]) >= 7) // cls-hooked requires node 4.7+\r\n        return !(greater800 && less820) && greater470;\r\n    }\r\n}\r\n\r\nclass CustomPropertiesImpl implements PrivateCustomProperties {\r\n    private static bannedCharacters = /[,=]/;\r\n    private props: {key: string, value:string}[] = [];\r\n\r\n    public constructor(header: string) {\r\n        this.addHeaderData(header);\r\n    }\r\n\r\n    public addHeaderData(header?: string) {\r\n        const keyvals = header ? header.split(\", \") : [];\r\n        this.props = keyvals.map((keyval) => {\r\n            const parts = keyval.split(\"=\");\r\n            return {key: parts[0], value: parts[1]};\r\n        }).concat(this.props);\r\n    }\r\n\r\n    public serializeToHeader() {\r\n        return this.props.map((keyval) => {\r\n            return `${keyval.key}=${keyval.value}`\r\n        }).join(\", \");\r\n    }\r\n\r\n    public getProperty(prop: string) {\r\n        for(let i = 0; i < this.props.length; ++i) {\r\n            const keyval = this.props[i]\r\n            if (keyval.key === prop) {\r\n                return keyval.value;\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    // TODO: Strictly according to the spec, properties which are recieved from\r\n    // an incoming request should be left untouched, while we may add our own new\r\n    // properties. The logic here will need to change to track that.\r\n    public setProperty(prop: string, val: string) {\r\n        if (CustomPropertiesImpl.bannedCharacters.test(prop) || CustomPropertiesImpl.bannedCharacters.test(val)) {\r\n            Logging.warn(\"Correlation context property keys and values must not contain ',' or '='. setProperty was called with key: \" + prop + \" and value: \"+ val);\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.props.length; ++i) {\r\n            const keyval = this.props[i];\r\n            if (keyval.key === prop) {\r\n                keyval.value = val;\r\n                return;\r\n            }\r\n        }\r\n        this.props.push({key: prop, value: val});\r\n    }\r\n}\r\n"]}