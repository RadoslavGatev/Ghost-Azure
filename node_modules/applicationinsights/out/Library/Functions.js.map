{"version":3,"file":"Functions.js","sourceRoot":"","sources":["../../Library/Functions.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * The context object can be used for writing logs, reading data from bindings, setting outputs and using\r\n * the context.done callback when your exported function is synchronous. A context object is passed\r\n * to your function from the Azure Functions runtime on function invocation.\r\n */\r\nexport interface Context {\r\n    traceContext: TraceContext\r\n}\r\n\r\n/**\r\n * HTTP request object. Provided to your function when using HTTP Bindings.\r\n */\r\nexport interface HttpRequest {\r\n    method: string | null;\r\n    url: string;\r\n    headers: {\r\n        [key: string]: string;\r\n    };\r\n}\r\n\r\n/**\r\n * TraceContext information to enable distributed tracing scenarios.\r\n */\r\nexport interface TraceContext {\r\n    /** Describes the position of the incoming request in its trace graph in a portable, fixed-length format. */\r\n    traceparent: string | null | undefined;\r\n    /** Extends traceparent with vendor-specific data. */\r\n    tracestate: string | null | undefined;\r\n    /** Holds additional properties being sent as part of request telemetry. */\r\n    attributes: {\r\n        [k: string]: string;\r\n    } | null | undefined;\r\n}\r\n"]}