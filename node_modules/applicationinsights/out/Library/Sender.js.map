{"version":3,"file":"Sender.js","sourceRoot":"","sources":["../../Library/Sender.ts"],"names":[],"mappings":"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","sourcesContent":["import fs = require(\"fs\");\r\nimport http = require(\"http\");\r\nimport https = require(\"https\");\r\nimport os = require(\"os\");\r\nimport path = require(\"path\");\r\nimport url = require(\"url\");\r\nimport zlib = require(\"zlib\");\r\nimport child_process = require(\"child_process\");\r\n\r\nimport Logging = require(\"./Logging\");\r\nimport Config = require(\"./Config\")\r\nimport AutoCollectHttpDependencies = require(\"../AutoCollection/HttpDependencies\");\r\nimport Util = require(\"./Util\");\r\n\r\nclass Sender {\r\n    private static TAG = \"Sender\";\r\n    private static ICACLS_PATH = `${process.env.systemdrive}/windows/system32/icacls.exe`;\r\n    private static POWERSHELL_PATH = `${process.env.systemdrive}/windows/system32/windowspowershell/v1.0/powershell.exe`;\r\n    private static ACLED_DIRECTORIES: {[id: string]: boolean} = {};\r\n    private static ACL_IDENTITY: string = null;\r\n\r\n    // the amount of time the SDK will wait between resending cached data, this buffer is to avoid any throttling from the service side\r\n    public static WAIT_BETWEEN_RESEND = 60 * 1000;\r\n    public static MAX_BYTES_ON_DISK = 50 * 1000 * 1000;\r\n    public static MAX_CONNECTION_FAILURES_BEFORE_WARN = 5;\r\n    public static TEMPDIR_PREFIX: string = \"appInsights-node\";\r\n    public static OS_PROVIDES_FILE_PROTECTION = false;\r\n    public static USE_ICACLS = os.type() === \"Windows_NT\";\r\n\r\n    private _config: Config;\r\n    private _storageDirectory: string;\r\n    private _onSuccess: (response: string) => void;\r\n    private _onError: (error: Error) => void;\r\n    private _enableDiskRetryMode: boolean;\r\n    private _numConsecutiveFailures: number;\r\n    private _resendTimer: NodeJS.Timer | null;\r\n    protected _resendInterval: number;\r\n    protected _maxBytesOnDisk: number;\r\n\r\n    constructor(config: Config, onSuccess?: (response: string) => void, onError?: (error: Error) => void) {\r\n        this._config = config;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n        this._enableDiskRetryMode = false;\r\n        this._resendInterval = Sender.WAIT_BETWEEN_RESEND;\r\n        this._maxBytesOnDisk = Sender.MAX_BYTES_ON_DISK;\r\n        this._numConsecutiveFailures = 0;\r\n        this._resendTimer = null;\r\n\r\n        if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n            // Node's chmod levels do not appropriately restrict file access on Windows\r\n            // Use the built-in command line tool ICACLS on Windows to properly restrict\r\n            // access to the temporary directory used for disk retry mode.\r\n            if (Sender.USE_ICACLS) {\r\n                // This should be async - but it's currently safer to have this synchronous\r\n                // This guarantees we can immediately fail setDiskRetryMode if we need to\r\n                try {\r\n                    Sender.OS_PROVIDES_FILE_PROTECTION = fs.existsSync(Sender.ICACLS_PATH);\r\n                } catch (e) {}\r\n                if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n                    Logging.warn(Sender.TAG, \"Could not find ICACLS in expected location! This is necessary to use disk retry mode on Windows.\")\r\n                }\r\n            } else {\r\n                // chmod works everywhere else\r\n                Sender.OS_PROVIDES_FILE_PROTECTION = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Enable or disable offline mode\r\n    */\r\n    public setDiskRetryMode(value: boolean, resendInterval?: number, maxBytesOnDisk?: number) {\r\n        this._enableDiskRetryMode = Sender.OS_PROVIDES_FILE_PROTECTION && value;\r\n        if (typeof resendInterval === 'number' && resendInterval >= 0) {\r\n            this._resendInterval = Math.floor(resendInterval);\r\n        }\r\n        if (typeof maxBytesOnDisk === 'number' && maxBytesOnDisk >= 0) {\r\n            this._maxBytesOnDisk = Math.floor(maxBytesOnDisk);\r\n        }\r\n\r\n        if (value && !Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n            this._enableDiskRetryMode = false;\r\n            Logging.warn(Sender.TAG, \"Ignoring request to enable disk retry mode. Sufficient file protection capabilities were not detected.\")\r\n        }\r\n    }\r\n\r\n    public send(payload: Buffer, callback?: (v: string) => void) {\r\n        var endpointUrl = this._config.endpointUrl;\r\n\r\n        // todo: investigate specifying an agent here: https://nodejs.org/api/http.html#http_class_http_agent\r\n        var options = {\r\n            method: \"POST\",\r\n            withCredentials: false,\r\n            headers: <{ [key: string]: string }>{\r\n                \"Content-Type\": \"application/x-json-stream\"\r\n            }\r\n        };\r\n\r\n        zlib.gzip(payload, (err, buffer) => {\r\n            var dataToSend = buffer;\r\n            if (err) {\r\n                Logging.warn(err);\r\n                dataToSend = payload; // something went wrong so send without gzip\r\n                options.headers[\"Content-Length\"] = payload.length.toString();\r\n            } else {\r\n                options.headers[\"Content-Encoding\"] = \"gzip\";\r\n                options.headers[\"Content-Length\"] = buffer.length;\r\n            }\r\n\r\n            Logging.info(Sender.TAG, options);\r\n\r\n            // Ensure this request is not captured by auto-collection.\r\n            (<any>options)[AutoCollectHttpDependencies.disableCollectionRequestOption] = true;\r\n\r\n            var requestCallback = (res: http.ClientResponse) => {\r\n                res.setEncoding(\"utf-8\");\r\n\r\n                //returns empty if the data is accepted\r\n                var responseString = \"\";\r\n                res.on(\"data\", (data: string) => {\r\n                    responseString += data;\r\n                });\r\n\r\n                res.on(\"end\", () => {\r\n                    this._numConsecutiveFailures = 0;\r\n\r\n                    Logging.info(Sender.TAG, responseString);\r\n                    if (typeof this._onSuccess === \"function\") {\r\n                        this._onSuccess(responseString);\r\n                    }\r\n\r\n                    if (typeof callback === \"function\") {\r\n                        callback(responseString);\r\n                    }\r\n\r\n                    if (this._enableDiskRetryMode) {\r\n                        // try to send any cached events if the user is back online\r\n                        if (res.statusCode === 200) {\r\n                            if (!this._resendTimer) {\r\n                                this._resendTimer = setTimeout(() => {\r\n                                    this._resendTimer = null;\r\n                                    this._sendFirstFileOnDisk()\r\n                                }, this._resendInterval);\r\n                                this._resendTimer.unref();\r\n                            }\r\n                            // store to disk in case of burst throttling\r\n                        } else if (\r\n                            res.statusCode === 408 || // Timeout\r\n                            res.statusCode === 429 || // Throttle\r\n                            res.statusCode === 439 || // Quota\r\n                            res.statusCode === 500 || // Server Error\r\n                            res.statusCode === 503) { // Service unavailable\r\n\r\n                            // TODO: Do not support partial success (206) until _sendFirstFileOnDisk checks payload age\r\n                            this._storeToDisk(payload);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n            var req = Util.makeRequest(this._config, endpointUrl, options, requestCallback);\r\n\r\n            req.on(\"error\", (error: Error) => {\r\n                // todo: handle error codes better (group to recoverable/non-recoverable and persist)\r\n                this._numConsecutiveFailures++;\r\n\r\n                // Only use warn level if retries are disabled or we've had some number of consecutive failures sending data\r\n                // This is because warn level is printed in the console by default, and we don't want to be noisy for transient and self-recovering errors\r\n                // Continue informing on each failure if verbose logging is being used\r\n                if (!this._enableDiskRetryMode || this._numConsecutiveFailures > 0 && this._numConsecutiveFailures % Sender.MAX_CONNECTION_FAILURES_BEFORE_WARN === 0) {\r\n                    let notice = \"Ingestion endpoint could not be reached. This batch of telemetry items has been lost. Use Disk Retry Caching to enable resending of failed telemetry. Error:\";\r\n                    if (this._enableDiskRetryMode) {\r\n                        notice = `Ingestion endpoint could not be reached ${this._numConsecutiveFailures} consecutive times. There may be resulting telemetry loss. Most recent error:`;\r\n                    }\r\n                    Logging.warn(Sender.TAG, notice, error);\r\n                } else {\r\n                    let notice = \"Transient failure to reach ingestion endpoint. This batch of telemetry items will be retried. Error:\";\r\n                    Logging.info(Sender.TAG, notice, error)\r\n                }\r\n                this._onErrorHelper(error);\r\n\r\n                if (typeof callback === \"function\") {\r\n                    var errorMessage = \"error sending telemetry\";\r\n                    if (error && (typeof error.toString === \"function\")) {\r\n                        errorMessage = error.toString();\r\n                    }\r\n\r\n                    callback(errorMessage);\r\n                }\r\n\r\n                if (this._enableDiskRetryMode) {\r\n                    this._storeToDisk(payload);\r\n                }\r\n            });\r\n\r\n            req.write(dataToSend);\r\n            req.end();\r\n        });\r\n    }\r\n\r\n    public saveOnCrash(payload: string) {\r\n        if (this._enableDiskRetryMode) {\r\n            this._storeToDiskSync(payload);\r\n        }\r\n    }\r\n\r\n    private _runICACLS(args: string[], callback: (err: Error) => void) {\r\n        var aclProc = child_process.spawn(Sender.ICACLS_PATH, args, <any>{windowsHide: true});\r\n        aclProc.on(\"error\", (e: Error) => callback(e));\r\n        aclProc.on(\"close\", (code: number, signal: string) => {\r\n            return callback(code === 0 ? null : new Error(`Setting ACL restrictions did not succeed (ICACLS returned code ${code})`));\r\n        });\r\n    }\r\n\r\n    private _runICACLSSync(args: string[]) {\r\n        // Some very old versions of Node (< 0.11) don't have this\r\n        if (child_process.spawnSync) {\r\n            var aclProc = child_process.spawnSync(Sender.ICACLS_PATH, args, <any>{windowsHide: true});\r\n            if (aclProc.error) {\r\n                throw aclProc.error;\r\n            } else if (aclProc.status !== 0) {\r\n                throw new Error(`Setting ACL restrictions did not succeed (ICACLS returned code ${aclProc.status})`);\r\n            }\r\n        } else {\r\n            throw new Error(\"Could not synchronously call ICACLS under current version of Node.js\");\r\n        }\r\n    }\r\n\r\n    private _getACLIdentity(callback: (error: Error, identity: string) => void) {\r\n        if (Sender.ACL_IDENTITY) {\r\n            return callback(null, Sender.ACL_IDENTITY);\r\n        }\r\n        var psProc = child_process.spawn(Sender.POWERSHELL_PATH,\r\n            [\"-Command\", \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"], <any>{\r\n                windowsHide: true,\r\n                stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\r\n            });\r\n        let data = \"\";\r\n        psProc.stdout.on(\"data\", (d: string) => data += d);\r\n        psProc.on(\"error\", (e: Error) => callback(e, null));\r\n        psProc.on(\"close\", (code: number, signal: string) => {\r\n            Sender.ACL_IDENTITY = data && data.trim();\r\n            return callback(\r\n                code === 0 ? null : new Error(`Getting ACL identity did not succeed (PS returned code ${code})`),\r\n                Sender.ACL_IDENTITY);\r\n        });\r\n    }\r\n\r\n    private _getACLIdentitySync() {\r\n        if (Sender.ACL_IDENTITY) {\r\n            return Sender.ACL_IDENTITY;\r\n        }\r\n        // Some very old versions of Node (< 0.11) don't have this\r\n        if (child_process.spawnSync) {\r\n            var psProc = child_process.spawnSync(Sender.POWERSHELL_PATH,\r\n                [\"-Command\", \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"], <any>{\r\n                    windowsHide: true,\r\n                    stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\r\n                });\r\n            if (psProc.error) {\r\n                throw psProc.error;\r\n            } else if (psProc.status !== 0) {\r\n                throw new Error(`Getting ACL identity did not succeed (PS returned code ${psProc.status})`);\r\n            }\r\n            Sender.ACL_IDENTITY = psProc.stdout && psProc.stdout.toString().trim();\r\n            return Sender.ACL_IDENTITY;\r\n        } else {\r\n            throw new Error(\"Could not synchronously get ACL identity under current version of Node.js\");\r\n        }\r\n    }\r\n\r\n    private _getACLArguments(directory: string, identity: string) {\r\n        return [directory,\r\n            \"/grant\", \"*S-1-5-32-544:(OI)(CI)F\", // Full permission for Administrators\r\n            \"/grant\", `${identity}:(OI)(CI)F`, // Full permission for current user\r\n            \"/inheritance:r\"]; // Remove all inherited permissions\r\n    }\r\n\r\n    private _applyACLRules(directory: string, callback: (err: Error) => void) {\r\n        if (!Sender.USE_ICACLS) {\r\n            return callback(null);\r\n        }\r\n\r\n        // For performance, only run ACL rules if we haven't already during this session\r\n        if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\r\n            // Avoid multiple calls race condition by setting ACLED_DIRECTORIES to false for this directory immediately\r\n            // If batches are being failed faster than the processes spawned below return, some data won't be stored to disk\r\n            // This is better than the alternative of potentially infinitely spawned processes\r\n            Sender.ACLED_DIRECTORIES[directory] = false;\r\n\r\n            // Restrict this directory to only current user and administrator access\r\n            this._getACLIdentity((err, identity) => {\r\n                if (err) {\r\n                    Sender.ACLED_DIRECTORIES[directory] = false; // false is used to cache failed (vs undefined which is \"not yet tried\")\r\n                    return callback(err);\r\n                } else {\r\n                    this._runICACLS(this._getACLArguments(directory, identity), (err) => {\r\n                        Sender.ACLED_DIRECTORIES[directory] = !err;\r\n                        return callback(err);\r\n                    });\r\n                }\r\n            });\r\n        } else {\r\n            return callback(Sender.ACLED_DIRECTORIES[directory] ? null :\r\n                new Error(\"Setting ACL restrictions did not succeed (cached result)\"));\r\n        }\r\n    }\r\n\r\n    private _applyACLRulesSync(directory: string) {\r\n        if (Sender.USE_ICACLS) {\r\n            // For performance, only run ACL rules if we haven't already during this session\r\n            if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\r\n                this._runICACLSSync(this._getACLArguments(directory, this._getACLIdentitySync()));\r\n                Sender.ACLED_DIRECTORIES[directory] = true; // If we get here, it succeeded. _runIACLSSync will throw on failures\r\n                return;\r\n            } else if (!Sender.ACLED_DIRECTORIES[directory]) { // falsy but not undefined\r\n                throw new Error(\"Setting ACL restrictions did not succeed (cached result)\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private _confirmDirExists(directory: string, callback: (err: NodeJS.ErrnoException) => void): void {\r\n        fs.lstat(directory, (err, stats) => {\r\n            if (err && err.code === 'ENOENT') {\r\n                fs.mkdir(directory, (err) => {\r\n                    if (err && err.code !== 'EEXIST') { // Handle race condition by ignoring EEXIST\r\n                        callback(err);\r\n                    } else {\r\n                        this._applyACLRules(directory, callback);\r\n                    }\r\n                });\r\n            } else if (!err && stats.isDirectory()){\r\n                this._applyACLRules(directory, callback);\r\n            } else {\r\n                callback(err || new Error(\"Path existed but was not a directory\"));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Computes the size (in bytes) of all files in a directory at the root level. Asynchronously.\r\n     */\r\n    private _getShallowDirectorySize(directory: string, callback: (err: NodeJS.ErrnoException, size: number) => void) {\r\n        // Get the directory listing\r\n        fs.readdir(directory, (err, files) => {\r\n            if (err) {\r\n                return callback(err, -1);\r\n            }\r\n\r\n            let error: NodeJS.ErrnoException = null;\r\n            let totalSize = 0;\r\n            let count = 0;\r\n\r\n            if (files.length === 0) {\r\n                callback(null, 0);\r\n                return;\r\n            }\r\n\r\n            // Query all file sizes\r\n            for (let i = 0; i < files.length; i++) {\r\n                fs.stat(path.join(directory, files[i]), (err, fileStats) => {\r\n                    count++;\r\n\r\n                    if (err) {\r\n                        error = err;\r\n                    } else {\r\n                        if (fileStats.isFile()) {\r\n                            totalSize += fileStats.size;\r\n                        }\r\n                    }\r\n\r\n                    if (count === files.length) {\r\n                        // Did we get an error?\r\n                        if (error) {\r\n                            callback(error, -1);\r\n                        } else {\r\n                            callback(error, totalSize);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Computes the size (in bytes) of all files in a directory at the root level. Synchronously.\r\n     */\r\n    private _getShallowDirectorySizeSync(directory: string): number {\r\n        let files = fs.readdirSync(directory);\r\n        let totalSize = 0;\r\n        for (let i = 0; i < files.length; i++) {\r\n            totalSize += fs.statSync(path.join(directory, files[i])).size;\r\n        }\r\n        return totalSize;\r\n    }\r\n\r\n    /**\r\n     * Stores the payload as a json file on disk in the temp directory\r\n     */\r\n    private _storeToDisk(payload: any) {\r\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\r\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n\r\n        // This will create the dir if it does not exist\r\n        // Default permissions on *nix are directory listing from other users but no file creations\r\n        Logging.info(Sender.TAG, \"Checking existence of data storage directory: \" + directory);\r\n        this._confirmDirExists(directory, (error) => {\r\n            if (error) {\r\n                Logging.warn(Sender.TAG, \"Error while checking/creating directory: \" + (error && error.message));\r\n                this._onErrorHelper(error);\r\n                return;\r\n            }\r\n\r\n            this._getShallowDirectorySize(directory, (err, size) => {\r\n                if (err || size < 0) {\r\n                    Logging.warn(Sender.TAG, \"Error while checking directory size: \" + (err && err.message));\r\n                    this._onErrorHelper(err);\r\n                    return;\r\n                } else if (size > this._maxBytesOnDisk) {\r\n                    Logging.warn(Sender.TAG, \"Not saving data due to max size limit being met. Directory size in bytes is: \" + size);\r\n                    return;\r\n                }\r\n\r\n                //create file - file name for now is the timestamp, a better approach would be a UUID but that\r\n                //would require an external dependency\r\n                var fileName = new Date().getTime() + \".ai.json\";\r\n                var fileFullPath = path.join(directory, fileName);\r\n\r\n                // Mode 600 is w/r for creator and no read access for others (only applies on *nix)\r\n                // For Windows, ACL rules are applied to the entire directory (see logic in _confirmDirExists and _applyACLRules)\r\n                Logging.info(Sender.TAG, \"saving data to disk at: \" + fileFullPath);\r\n                fs.writeFile(fileFullPath, payload, {mode: 0o600}, (error) => this._onErrorHelper(error));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Stores the payload as a json file on disk using sync file operations\r\n     * this is used when storing data before crashes\r\n     */\r\n    private _storeToDiskSync(payload: any) {\r\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\r\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n\r\n        try {\r\n            Logging.info(Sender.TAG, \"Checking existence of data storage directory: \" + directory);\r\n            if (!fs.existsSync(directory)) {\r\n                fs.mkdirSync(directory);\r\n            }\r\n\r\n            // Make sure permissions are valid\r\n            this._applyACLRulesSync(directory);\r\n\r\n            let dirSize = this._getShallowDirectorySizeSync(directory);\r\n            if (dirSize > this._maxBytesOnDisk) {\r\n                Logging.info(Sender.TAG, \"Not saving data due to max size limit being met. Directory size in bytes is: \" + dirSize);\r\n                return;\r\n            }\r\n\r\n            //create file - file name for now is the timestamp, a better approach would be a UUID but that\r\n            //would require an external dependency\r\n            var fileName = new Date().getTime() + \".ai.json\";\r\n            var fileFullPath = path.join(directory, fileName);\r\n\r\n            // Mode 600 is w/r for creator and no access for anyone else (only applies on *nix)\r\n            Logging.info(Sender.TAG, \"saving data before crash to disk at: \" + fileFullPath);\r\n            fs.writeFileSync(fileFullPath, payload, {mode: 0o600});\r\n\r\n        } catch (error) {\r\n            Logging.warn(Sender.TAG, \"Error while saving data to disk: \" + (error && error.message));\r\n            this._onErrorHelper(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check for temp telemetry files\r\n     * reads the first file if exist, deletes it and tries to send its load\r\n     */\r\n    private _sendFirstFileOnDisk(): void {\r\n        var tempDir = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n\r\n        fs.exists(tempDir, (exists: boolean) => {\r\n            if (exists) {\r\n                fs.readdir(tempDir, (error, files) => {\r\n                    if (!error) {\r\n                        files = files.filter(f => path.basename(f).indexOf(\".ai.json\") > -1);\r\n                        if (files.length > 0) {\r\n                            var firstFile = files[0];\r\n                            var filePath = path.join(tempDir, firstFile);\r\n                            fs.readFile(filePath, (error, payload) => {\r\n                                if (!error) {\r\n                                    // delete the file first to prevent double sending\r\n                                    fs.unlink(filePath, (error) => {\r\n                                        if (!error) {\r\n                                            this.send(payload);\r\n                                        } else {\r\n                                            this._onErrorHelper(error);\r\n                                        }\r\n                                    });\r\n                                } else {\r\n                                    this._onErrorHelper(error);\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        this._onErrorHelper(error);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onErrorHelper(error: Error): void {\r\n        if (typeof this._onError === \"function\") {\r\n            this._onError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport = Sender;\r\n"]}