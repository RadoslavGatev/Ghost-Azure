{"version":3,"file":"parser-plugins.js","sources":["../lib/cards/audio.js","../lib/helpers.js","../lib/cards/before-after.js","../lib/cards/button.js","../lib/cards/embed.js","../lib/cards/file.js","../lib/cards/header.js","../lib/cards/html.js","../lib/cards/image.js","../lib/cards/product.js","../lib/cards/softReturn.js","../lib/cards/video.js","../lib/cards/gallery.js","../lib/parser-plugins.js"],"sourcesContent":["export function fromKoenigCard() {\n    return function kgAudioCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-audio-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-audio-title');\n        const audioNode = node.querySelector('.kg-audio-player-container audio');\n        const thumbnailNode = node.querySelector('.kg-audio-thumbnail');\n        const durationNode = node.querySelector('.kg-audio-duration');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const audioSrc = audioNode && audioNode.src;\n        const thumbnailSrc = thumbnailNode && thumbnailNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!audioSrc) {\n            return;\n        }\n\n        const payload = {\n            src: audioSrc,\n            title: title\n        };\n        if (thumbnailSrc) {\n            payload.thumbnailSrc = thumbnailSrc;\n        }\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('audio', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function addFigCaptionToPayload(node, payload, {selector = 'figcaption', options}) {\n    let figcaptions = Array.from(node.querySelectorAll(selector));\n\n    if (figcaptions.length) {\n        figcaptions.forEach((caption) => {\n            let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n            payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n            caption.remove(); // cleanup this processed element\n        });\n    }\n}\n\nexport function readImageAttributesFromNode(node) {\n    const attrs = {};\n\n    if (node.src) {\n        attrs.src = node.src;\n    }\n\n    if (node.width) {\n        attrs.width = node.width;\n    } else if (node.dataset && node.dataset.width) {\n        attrs.width = parseInt(node.dataset.width, 10);\n    }\n\n    if (node.height) {\n        attrs.height = node.height;\n    } else if (node.dataset && node.dataset.height) {\n        attrs.height = parseInt(node.dataset.height, 10);\n    }\n\n    if ((!node.width && !node.height) && node.getAttribute('data-image-dimensions')) {\n        const [, width, height] = (/^(\\d*)x(\\d*)$/gi).exec(node.getAttribute('data-image-dimensions'));\n        attrs.width = parseInt(width, 10);\n        attrs.height = parseInt(height, 10);\n    }\n\n    if (node.alt) {\n        attrs.alt = node.alt;\n    }\n\n    if (node.title) {\n        attrs.title = node.title;\n    }\n\n    if (node.parentNode.tagName === 'A') {\n        const href = node.parentNode.href;\n\n        if (href !== attrs.src) {\n            attrs.href = href;\n        }\n    }\n\n    return attrs;\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\nexport function fromKoenigCard(options) {\n    return function kgBeforeAfterCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-before-after-card')) {\n            return;\n        }\n\n        const cardWidth = node.classList.contains('kg-width-full') ? 'full' : 'wide';\n\n        const images = node.querySelectorAll('img');\n\n        const beforeImage = images[1];\n        const afterImage = images[0];\n\n        if (!beforeImage || !afterImage) {\n            return;\n        }\n\n        const payload = {\n            cardWidth,\n            beforeImage: {\n                width: beforeImage.width,\n                src: beforeImage.src\n            },\n            afterImage: {\n                width: afterImage.width,\n                src: afterImage.src\n            }\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        const cardSection = builder.createCardSection('before-after', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromJetpackCard(options) {\n    return function jetpackJuxtaposeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-jetpack-image-compare')) {\n            return;\n        }\n\n        const cardWidth = 'wide';\n\n        const images = node.querySelectorAll('img');\n\n        const beforeImage = images[0];\n        const afterImage = images[1];\n\n        if (!beforeImage || !afterImage) {\n            return;\n        }\n\n        const payload = {\n            cardWidth,\n            beforeImage: {\n                width: 1000,\n                src: beforeImage.src\n            },\n            afterImage: {\n                width: 1000,\n                src: afterImage.src\n            }\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        const cardSection = builder.createCardSection('before-after', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-button-card')) {\n            return;\n        }\n\n        const alignment = node.classList.contains('kg-align-center') ? 'center' : 'left';\n\n        const anchor = node.querySelector('a');\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromWordpressButton() {\n    return function wordpressButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-button__link')) {\n            return;\n        }\n\n        const buttonUrl = node.href;\n        const buttonText = getButtonText(node);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        let alignment = 'left';\n\n        if (node.closest('.is-content-justification-center, .is-content-justification-right')) {\n            alignment = 'center';\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSubstackButton() {\n    return function substackButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('button')) {\n            return;\n        }\n\n        // substack has .button-wrapper elems with a data-attrs JSON object with `url` and `text`\n        // we're not using that in favour of grabbing the anchor element directly for simplicity\n\n        const anchor = node.tagName === 'A' ? node : node.querySelector('a');\n\n        if (!anchor) {\n            return;\n        }\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment: 'center', // all Substack buttons are centered\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\n// Helpers\n\nfunction _createPayloadForIframe(iframe) {\n    // If we don't have a src Or it's not an absolute URL, we can't handle this\n    // This regex handles http://, https:// or //\n    if (!iframe.src || !iframe.src.match(/^(https?:)?\\/\\//i)) {\n        return;\n    }\n\n    // if it's a schemaless URL, convert to https\n    if (iframe.src.match(/^\\/\\//)) {\n        iframe.src = `https:${iframe.src}`;\n    }\n\n    let payload = {\n        url: iframe.src\n    };\n\n    payload.html = iframe.outerHTML;\n\n    return payload;\n}\n\n// Plugins\n\nexport function fromMixtape(options) {\n    return function mixtapeEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/graf--mixtapeEmbed/)) {\n            return;\n        }\n\n        // Grab the relevant elements - Anchor wraps most of the data\n        let anchorElement = node.querySelector('.markup--mixtapeEmbed-anchor');\n        let titleElement = anchorElement.querySelector('.markup--mixtapeEmbed-strong');\n        let descElement = anchorElement.querySelector('.markup--mixtapeEmbed-em');\n        // Image is a top level field inside it's own a tag\n        let imgElement = node.querySelector('.mixtapeImage');\n\n        // Grab individual values from the elements\n        let url = anchorElement.href;\n        let title = '';\n        let description = '';\n\n        if (titleElement && titleElement.innerHTML) {\n            title = options.cleanBasicHtml(titleElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed title\n            anchorElement.removeChild(titleElement);\n        }\n\n        if (descElement && descElement.innerHTML) {\n            description = options.cleanBasicHtml(descElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed description\n            anchorElement.removeChild(descElement);\n        }\n\n        // // Format our preferred structure.\n        let metadata = {\n            url,\n            title,\n            description\n        };\n\n        // Publisher is the remaining text in the anchor, once title & desc are removed\n        let publisher = options.cleanBasicHtml(anchorElement.innerHTML);\n        if (publisher) {\n            metadata.publisher = publisher;\n        }\n\n        // Image is optional,\n        // The element usually still exists with an additional has.mixtapeImage--empty class and has no background image\n        if (imgElement && imgElement.style['background-image']) {\n            metadata.thumbnail = imgElement.style['background-image'].match(/url\\(([^)]*?)\\)/)[1];\n        }\n\n        let payload = {url, metadata};\n        let cardSection = builder.createCardSection('bookmark', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureIframe(options) {\n    return function figureIframeToEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let iframe = node.querySelector('iframe');\n\n        if (!iframe) {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(iframe);\n\n        if (!payload) {\n            return;\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromIframe() {\n    return function iframeToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IFRAME') {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(node);\n\n        if (!payload) {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureBlockquote(options) {\n    return function figureBlockquoteToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let blockquote = node.querySelector('blockquote');\n        let link = node.querySelector('a');\n\n        if (!blockquote || !link) {\n            return;\n        }\n\n        let url = link.href;\n\n        // If we don't have a url, or it's not an absolute URL, we can't handle this\n        if (!url || !url.match(/^https?:\\/\\//i)) {\n            return;\n        }\n\n        let payload = {\n            url: url\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        payload.html = node.innerHTML;\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromNFTEmbed() {\n    return function fromNFTEmbedToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || (node.tagName !== 'FIGURE' && node.tagName !== 'NFT-CARD' && node.tagName !== 'DIV')) {\n            return;\n        }\n\n        // Attempt to parse Ghost NFT Card\n        if (node.tagName === 'FIGURE') {\n            if (!node.classList.contains('kg-nft-card')) {\n                return;\n            }\n            let nftCard = node.querySelector('a');\n\n            if (!nftCard) {\n                return;\n            }\n\n            let payload;\n            try {\n                payload = JSON.parse(decodeURIComponent(nftCard.dataset.payload));\n            } catch (err) {\n                return nodeFinished();\n            }\n\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        // Attempt to parse Substack NFT Card\n        if (node.tagName === 'DIV') {\n            if (!node.classList.contains('opensea')) {\n                return;\n            }\n\n            let url = node.querySelector('a');\n            let [match, contractAddress, tokenId] = url.href.match(/\\/assets\\/(0x[0-9a-f]+)\\/(\\d+)/);\n\n            if (!match) {\n                return;\n            }\n\n            let payload = {\n                url: url.href,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        if (node.tagName === 'NFT-CARD') {\n            let attr = node.attributes;\n            let contractAddress = (attr.contractAddress || attr.contractaddress || attr.tokenaddress || attr.contractaddress).value;\n            let tokenId = (attr.tokenId || attr.tokenid).value;\n            if (!contractAddress || !tokenId) {\n                return;\n            }\n            let payload = {\n                url: `https://opensea.io/assets/${contractAddress}/${tokenId}/`,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n    };\n}\n","function transformSizeToBytes(sizeStr = '') {\n    if (!sizeStr) {\n        return 0;\n    }\n    const [sizeVal, sizeType] = sizeStr.split(' ');\n    if (!sizeVal || !sizeType) {\n        return 0;\n    }\n    if (sizeType === 'Bytes') {\n        return Number(sizeVal);\n    } else if (sizeType === 'KB') {\n        return Number(sizeVal) * 2048;\n    } else if (sizeType === 'MB') {\n        return Number(sizeVal) * 2048 * 2048;\n    }\n}\n\nexport function fromKoenigCard() {\n    return function kgFileCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-file-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-file-card-title');\n        const captionNode = node.querySelector('.kg-file-card-caption');\n        const fileNameNode = node.querySelector('.kg-file-card-filename');\n        const fileSizeNode = node.querySelector('.kg-file-card-filesize');\n        const fileCardLinkNode = node.querySelector('.kg-file-card-container');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const caption = captionNode && captionNode.innerHTML.trim();\n        const fileName = fileNameNode && fileNameNode.innerHTML.trim();\n        const fileSizeStr = fileSizeNode && fileSizeNode.innerHTML.trim();\n        const fileSrc = fileCardLinkNode && fileCardLinkNode.href;\n\n        if (!fileSrc) {\n            return;\n        }\n\n        const payload = {\n            src: fileSrc,\n            fileTitle: title,\n            fileCaption: caption,\n            fileSize: transformSizeToBytes(fileSizeStr),\n            fileName: fileName\n        };\n\n        const cardSection = builder.createCardSection('file', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgHeaderCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-header-card')) {\n            return;\n        }\n\n        const headerNode = node.querySelector('.kg-header-card-header');\n        const subheaderNode = node.querySelector('.kg-header-card-subheader');\n        const buttonNode = node.querySelector('.kg-header-card-button');\n\n        let header = '';\n        let subheader = '';\n        let buttonText = '';\n        let buttonUrl = '';\n\n        if (headerNode) {\n            header = headerNode.innerHTML.trim();\n        }\n        if (subheaderNode) {\n            subheader = subheaderNode.innerHTML.trim();\n        }\n\n        if (buttonNode) {\n            buttonText = buttonNode.textContent.trim();\n            buttonUrl = buttonNode.getAttribute('href').trim();\n        }\n\n        if (!header && !subheader && (!buttonNode || !buttonText || !buttonUrl)) {\n            return;\n        }\n\n        const classes = [...node.classList];\n        let backgroundImageSrc = '';\n        if (node.getAttribute('data-kg-background-image')) {\n            backgroundImageSrc = node.getAttribute('data-kg-background-image').trim();\n        }\n\n        const payload = {\n            header,\n            subheader,\n            buttonEnabled: Boolean(buttonNode),\n            buttonText,\n            buttonUrl,\n            backgroundImageSrc,\n            size: 'small',\n            style: 'dark'\n        };\n\n        const sizeClass = classes.find(c => /^kg-size-(small|medium|large)$/.test(c));\n        const styleClass = classes.find(c => /^kg-style-(dark|light|accent|image)$/.test(c));\n        if (sizeClass) {\n            payload.size = sizeClass.replace('kg-size-', '');\n        }\n        if (styleClass) {\n            payload.style = styleClass.replace('kg-style-', '');\n        }\n\n        const cardSection = builder.createCardSection('header', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","// https://github.com/TryGhost/Koenig/issues/1\n// allows arbitrary HTML blocks wrapped in our card comments to be extracted\n// into a HTML card rather than being put through the normal parse+plugins\nexport function fromKoenigCard() {\n    return function kgHtmlCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 8 || node.nodeValue !== 'kg-card-begin: html') {\n            return;\n        }\n\n        let html = [];\n\n        function isHtmlEndComment(n) {\n            return n && n.nodeType === 8 && n.nodeValue === 'kg-card-end: html';\n        }\n\n        let nextNode = node.nextSibling;\n        while (nextNode && !isHtmlEndComment(nextNode)) {\n            let currentNode = nextNode;\n            html.push(currentNode.outerHTML);\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        let payload = {html: html.join('\\n').trim()};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload, readImageAttributesFromNode} from '../helpers';\n\nexport function fromImg() {\n    return function imgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IMG') {\n            return;\n        }\n\n        const payload = readImageAttributesFromNode(node);\n\n        const cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigure(options) {\n    return function figureImgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        const img = node.querySelector('img');\n        const kgClass = node.className.match(/kg-width-(wide|full)/);\n        const grafClass = node.className.match(/graf--layout(FillWidth|OutsetCenter)/);\n\n        if (!img) {\n            return;\n        }\n\n        const payload = readImageAttributesFromNode(img);\n\n        if (kgClass) {\n            payload.cardWidth = kgClass[1];\n        } else if (grafClass) {\n            payload.cardWidth = grafClass[1] === 'FillWidth' ? 'full' : 'wide';\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-product-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-product-card-title');\n        const descriptionNode = node.querySelector('.kg-product-card-description');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const description = descriptionNode && descriptionNode.innerHTML.trim();\n\n        if (!title && !description) {\n            return;\n        }\n\n        const payload = {\n            productButtonEnabled: false,\n            productRatingEnabled: false,\n\n            productTitle: title,\n            productDescription: description\n        };\n\n        const img = node.querySelector('.kg-product-card-image');\n        if (img && img.getAttribute('src')) {\n            payload.productImageSrc = img.getAttribute('src');\n        }\n\n        const stars = [...node.querySelectorAll('.kg-product-card-rating-active')].length;\n        if (stars) {\n            payload.productRatingEnabled = true;\n            payload.productStarRating = stars;\n        }\n\n        const button = node.querySelector('a');\n\n        if (button) {\n            const buttonUrl = button.href;\n            const buttonText = getButtonText(button);\n\n            if (buttonUrl && buttonText) {\n                payload.productButtonEnabled = true;\n                payload.productButton = buttonText;\n                payload.productUrl = buttonUrl;\n            }\n        }\n\n        const cardSection = builder.createCardSection('product', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromBr() {\n    // mobiledoc by default ignores <BR> tags but we have a custom SoftReturn atom\n    return function fromBrToSoftReturnAtom(node, builder, {addMarkerable, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'BR') {\n            return;\n        }\n\n        let softReturn = builder.createAtom('soft-return');\n        addMarkerable(softReturn);\n\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgVideoCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-video-card')) {\n            return;\n        }\n\n        const videoNode = node.querySelector('.kg-video-player-container video');\n        const durationNode = node.querySelector('.kg-video-duration');\n        const videoSrc = videoNode && videoNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!videoSrc) {\n            return;\n        }\n\n        const payload = {\n            src: videoSrc,\n            loop: !!videoNode.loop\n        };\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('video', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload, readImageAttributesFromNode} from '../helpers';\n\nfunction readGalleryImageAttributesFromNode(node, imgNum) {\n    const image = readImageAttributesFromNode(node);\n\n    image.fileName = node.src.match(/[^/]*$/)[0];\n    image.row = Math.floor(imgNum / 3);\n\n    return image;\n}\n\nexport function fromKoenigCard(options) {\n    return function kgGalleryCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        if (!node.className.match(/kg-gallery-card/)) {\n            return;\n        }\n\n        let payload = {};\n        let imgs = Array.from(node.querySelectorAll('img'));\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromGrafGallery(options) {\n    return function grafGalleryToCard(node, builder, {addSection, nodeFinished}) {\n        function isGrafGallery(n) {\n            return n.nodeType === 1 && n.tagName === 'DIV' && n.dataset && n.dataset.paragraphCount && n.querySelectorAll('img').length > 0;\n        }\n\n        if (!isGrafGallery(node)) {\n            return;\n        }\n\n        let payload = {};\n\n        // These galleries exist in multiple divs. Read the images and caption from the first one...\n        let imgs = Array.from(node.querySelectorAll('img'));\n        addFigCaptionToPayload(node, payload, {options});\n\n        // ...and then iterate over any remaining divs until we run out of matches\n        let nextNode = node.nextSibling;\n        while (nextNode && isGrafGallery(nextNode)) {\n            let currentNode = nextNode;\n            imgs = imgs.concat(Array.from(currentNode.querySelectorAll('img')));\n            addFigCaptionToPayload(currentNode, payload, {options});\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSqsGallery(options) {\n    return function sqsGalleriesToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/sqs-gallery-container/) || node.className.match(/summary-/)) {\n            return;\n        }\n\n        let payload = {};\n\n        // Each image exists twice...\n        // The first image is wrapped in `<noscript>`\n        // The second image contains image dimensions but the src property needs to be taken from `data-src`.\n        let imgs = Array.from(node.querySelectorAll('img.thumb-image'));\n\n        imgs = imgs.map((img) => {\n            if (!img.getAttribute('src')) {\n                if (img.previousSibling.tagName === 'NOSCRIPT' && img.previousSibling.getElementsByTagName('img').length) {\n                    const prevNode = img.previousSibling;\n                    img.setAttribute('src', img.getAttribute('data-src'));\n                    prevNode.remove();\n                } else {\n                    return undefined;\n                }\n            }\n\n            return img;\n        });\n\n        addFigCaptionToPayload(node, payload, {options, selector: '.meta-title'});\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","/* global DOMParser, window */\n\n/**\n * Copied from:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/options/parser-plugins.js\n * Which makes use of:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/helpers/clean-basic-html.js\n *\n * These functions are used to proces nodes during parsing from DOM -> mobiledoc\n */\n\nimport cleanBasicHtml from '@tryghost/kg-clean-basic-html';\n\nimport * as audioCard from './cards/audio';\nimport * as beforeAfterCard from './cards/before-after';\nimport * as buttonCard from './cards/button';\nimport * as embedCard from './cards/embed';\nimport * as fileCard from './cards/file';\nimport * as headerCard from './cards/header';\nimport * as htmlCard from './cards/html';\nimport * as imageCard from './cards/image';\nimport * as productCard from './cards/product';\nimport * as softReturn from './cards/softReturn';\nimport * as videoCard from './cards/video';\nimport * as galleryCard from './cards/gallery';\n\nexport function createParserPlugins(_options = {}) {\n    const defaults = {};\n    const options = Object.assign({}, defaults, _options);\n\n    if (!options.createDocument) {\n        const Parser = (typeof DOMParser !== 'undefined' && DOMParser) || (typeof window !== 'undefined' && window.DOMParser);\n\n        if (!Parser) {\n            throw new Error('createParserPlugins() must be passed a `createDocument` function as an option when used in a non-browser environment');\n        }\n\n        options.createDocument = function (html) {\n            const parser = new Parser();\n            return parser.parseFromString(html, 'text/html');\n        };\n    }\n\n    options.cleanBasicHtml = function (html) {\n        return cleanBasicHtml(html, options);\n    };\n\n    // HELPERS -----------------------------------------------------------------\n\n    function _readFigCaptionFromNode(node, payload, selector = 'figcaption') {\n        let figcaptions = Array.from(node.querySelectorAll(selector));\n\n        if (figcaptions.length) {\n            figcaptions.forEach((caption) => {\n                let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n                payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n                caption.remove(); // cleanup this processed element\n            });\n        }\n    }\n\n    // PLUGINS -----------------------------------------------------------------\n\n    function kgCalloutCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-callout-card')) {\n            return;\n        }\n\n        const emojiNode = node.querySelector('.kg-callout-emoji');\n        const htmlNode = node.querySelector('.kg-callout-text');\n\n        const backgroundColor = node.style.backgroundColor || '#F1F3F4';\n\n        let calloutEmoji = '';\n        if (emojiNode) {\n            calloutEmoji = emojiNode.textContent;\n            if (calloutEmoji) {\n                calloutEmoji = calloutEmoji.trim();\n            }\n        }\n\n        let calloutText = htmlNode.innerHTML;\n\n        const payload = {\n            calloutEmoji,\n            calloutText,\n            backgroundColor\n        };\n\n        const cardSection = builder.createCardSection('callout', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function kgToggleCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-toggle-card')) {\n            return;\n        }\n\n        const headingNode = node.querySelector('.kg-toggle-heading-text');\n        const contentNode = node.querySelector('.kg-toggle-content');\n\n        let toggleHeading = headingNode.innerHTML;\n        let toggleContent = contentNode.innerText;\n\n        const payload = {\n            heading: toggleHeading,\n            content: toggleContent\n        };\n\n        const cardSection = builder.createCardSection('toggle', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // leading newlines in text nodes will add a space to the beginning of the text\n    // which doesn't render correctly if we're replacing <br> with SoftReturn atoms\n    // after parsing text as markdown to html\n    function removeLeadingNewline(node) {\n        if (node.nodeType !== 3 || node.nodeName !== '#text') {\n            return;\n        }\n\n        node.nodeValue = node.nodeValue.replace(/^\\n/, '');\n    }\n\n    function hrToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'HR') {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('hr');\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function figureToCodeCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let pre = node.querySelector('pre');\n\n        // If this figure doesn't have a pre tag in it\n        if (!pre) {\n            return;\n        }\n\n        let code = pre.querySelector('code');\n        let figcaption = node.querySelector('figcaption');\n\n        // if there's no caption the preCodeToCard plugin will pick it up instead\n        if (!code || !figcaption) {\n            return;\n        }\n\n        let payload = {\n            code: code.textContent\n        };\n\n        _readFigCaptionFromNode(node, payload);\n\n        let preClass = pre.getAttribute('class') || '';\n        let codeClass = code.getAttribute('class') || '';\n        let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n        let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n        if (languageMatches) {\n            payload.language = languageMatches[1].toLowerCase();\n        }\n\n        let cardSection = builder.createCardSection('code', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function preCodeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'PRE') {\n            return;\n        }\n\n        let [codeElement] = node.children;\n\n        if (codeElement && codeElement.tagName === 'CODE') {\n            let payload = {code: codeElement.textContent};\n\n            let preClass = node.getAttribute('class') || '';\n            let codeClass = codeElement.getAttribute('class') || '';\n            let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n            let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n            if (languageMatches) {\n                payload.language = languageMatches[1].toLowerCase();\n            }\n\n            let cardSection = builder.createCardSection('code', payload);\n            addSection(cardSection);\n            nodeFinished();\n        }\n    }\n\n    function figureScriptToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let script = node.querySelector('script');\n\n        if (!script || !script.src.match(/^https:\\/\\/gist\\.github\\.com/)) {\n            return;\n        }\n\n        let payload = {html: script.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // Nested paragraphs in blockquote are currently treated as separate blockquotes,\n    // see [here](https://github.com/bustle/mobiledoc-kit/issues/715). When running migrations,\n    // this is not the desired behaviour and will cause the content to lose the previous semantic.\n    function blockquoteWithChildren(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE' || node.children.length < 1) {\n            return;\n        }\n\n        const html = [];\n        const children = Array.from(node.children);\n\n        children.forEach((child) => {\n            let nextSibling = child.nextSibling;\n            let previousSibling = child.previousSibling;\n\n            // Only add a soft-break for two sequential paragraphs.\n            // Use the innerHTML only in that case, so Mobiledoc's default behaviour\n            // of creating separate blockquotes doesn't apply.\n            if (child.tagName === 'P' && (nextSibling && nextSibling.tagName === 'P')) {\n                html.push(`${child.innerHTML}<br><br>`);\n            } else if (child.tagName === 'P' && (previousSibling && previousSibling.tagName === 'P')) {\n                html.push(child.innerHTML);\n            } else {\n                html.push(child.outerHTML);\n            }\n        });\n\n        node.innerHTML = html.join('').trim();\n\n        return;\n    }\n\n    // we store alt-style blockquotes as `aside` sections as a workaround\n    // for mobiledoc not allowing arbitrary attributes on markup sections\n    function altBlockquoteToAside(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE') {\n            return;\n        }\n\n        if (!node.classList.contains('kg-blockquote-alt')) {\n            return;\n        }\n\n        const replacementDoc = options.createDocument(`<aside>${node.innerHTML}</aside>`);\n        const aside = replacementDoc.querySelector('aside');\n\n        // bit of an ugly hack because\n        // 1. node.tagName is readonly so we can't directly change it's type\n        // 2. the node list of the current tree branch is not re-evaluated so removing\n        //    this node, replacing it, or adding a new _sibling_ will not be picked up\n        //\n        // relies on mobiledoc-kit's handling of nested elements picking the\n        // inner-most understandable section element when creating sections\n        node.textContent = '';\n        node.appendChild(aside);\n\n        // let the default parser handle the nested aside node, keeping any formatting\n        return;\n    }\n\n    function tableToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'TABLE') {\n            return;\n        }\n\n        if (node.parentNode.tagName === 'TABLE') {\n            return;\n        }\n\n        let payload = {html: node.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    return [\n        beforeAfterCard.fromKoenigCard(options),\n        beforeAfterCard.fromJetpackCard(options),\n        embedCard.fromNFTEmbed(),\n        embedCard.fromMixtape(options),\n        htmlCard.fromKoenigCard(options),\n        buttonCard.fromKoenigCard(options),\n        buttonCard.fromWordpressButton(options),\n        buttonCard.fromSubstackButton(options),\n        kgCalloutCardToCard,\n        kgToggleCardToCard,\n        productCard.fromKoenigCard(options),\n        audioCard.fromKoenigCard(options),\n        videoCard.fromKoenigCard(options),\n        fileCard.fromKoenigCard(options),\n        headerCard.fromKoenigCard(options),\n        blockquoteWithChildren,\n        softReturn.fromBr(options),\n        removeLeadingNewline,\n        galleryCard.fromKoenigCard(options),\n        embedCard.fromFigureBlockquote(options), // I think these can contain images\n        galleryCard.fromGrafGallery(options),\n        galleryCard.fromSqsGallery(options),\n        imageCard.fromFigure(options),\n        imageCard.fromImg(options),\n        hrToCard,\n        figureToCodeCard,\n        preCodeToCard,\n        embedCard.fromFigureIframe(options),\n        embedCard.fromIframe(options), // Process iFrames without figures after ones with\n        figureScriptToHtmlCard,\n        altBlockquoteToAside,\n        tableToHtmlCard\n    ];\n}\n"],"names":["fromKoenigCard","kgAudioCardToCard","node","builder","_ref","addSection","nodeFinished","nodeType","classList","contains","titleNode","querySelector","audioNode","thumbnailNode","durationNode","title","innerHTML","trim","audioSrc","src","thumbnailSrc","durationText","payload","minutes","seconds","split","duration","parseInt","e","cardSection","createCardSection","addFigCaptionToPayload","selector","options","figcaptions","Array","from","querySelectorAll","length","forEach","caption","cleanHtml","cleanBasicHtml","remove","readImageAttributesFromNode","attrs","width","dataset","height","getAttribute","exec","alt","parentNode","tagName","href","kgBeforeAfterCardToCard","cardWidth","images","beforeImage","afterImage","fromJetpackCard","jetpackJuxtaposeToCard","_ref2","getButtonText","buttonText","textContent","replace","kgButtonCardToCard","alignment","anchor","buttonUrl","fromWordpressButton","wordpressButtonToCard","closest","fromSubstackButton","substackButtonToCard","_ref3","_createPayloadForIframe","iframe","match","url","html","outerHTML","fromMixtape","mixtapeEmbed","className","anchorElement","titleElement","descElement","imgElement","description","removeChild","metadata","publisher","style","thumbnail","fromFigureIframe","figureIframeToEmbed","fromIframe","iframeToEmbedCard","fromFigureBlockquote","figureBlockquoteToEmbedCard","_ref4","blockquote","link","fromNFTEmbed","fromNFTEmbedToEmbedCard","_ref5","nftCard","JSON","parse","decodeURIComponent","err","contractAddress","tokenId","attr","attributes","contractaddress","tokenaddress","value","tokenid","transformSizeToBytes","sizeStr","arguments","undefined","sizeVal","sizeType","Number","kgFileCardToCard","captionNode","fileNameNode","fileSizeNode","fileCardLinkNode","fileName","fileSizeStr","fileSrc","fileTitle","fileCaption","fileSize","kgHeaderCardToCard","headerNode","subheaderNode","buttonNode","header","subheader","classes","backgroundImageSrc","buttonEnabled","Boolean","size","sizeClass","find","c","test","styleClass","kgHtmlCardToCard","nodeValue","isHtmlEndComment","n","nextNode","nextSibling","currentNode","push","join","fromImg","imgToCard","fromFigure","figureImgToCard","img","kgClass","grafClass","descriptionNode","productButtonEnabled","productRatingEnabled","productTitle","productDescription","productImageSrc","stars","productStarRating","button","productButton","productUrl","fromBr","fromBrToSoftReturnAtom","addMarkerable","softReturn","createAtom","kgVideoCardToCard","videoNode","videoSrc","loop","readGalleryImageAttributesFromNode","imgNum","image","row","Math","floor","kgGalleryCardToCard","imgs","map","fromGrafGallery","grafGalleryToCard","isGrafGallery","paragraphCount","concat","fromSqsGallery","sqsGalleriesToCard","previousSibling","getElementsByTagName","prevNode","setAttribute","createParserPlugins","_options","defaults","Object","assign","createDocument","Parser","DOMParser","window","Error","parser","parseFromString","_readFigCaptionFromNode","kgCalloutCardToCard","emojiNode","htmlNode","backgroundColor","calloutEmoji","calloutText","kgToggleCardToCard","headingNode","contentNode","toggleHeading","toggleContent","innerText","heading","content","removeLeadingNewline","nodeName","hrToCard","figureToCodeCard","pre","code","figcaption","preClass","codeClass","langRegex","languageMatches","language","toLowerCase","preCodeToCard","codeElement","children","figureScriptToHtmlCard","_ref6","script","blockquoteWithChildren","child","altBlockquoteToAside","replacementDoc","aside","appendChild","tableToHtmlCard","_ref7","beforeAfterCard","embedCard","htmlCard","buttonCard","productCard","audioCard","videoCard","fileCard","headerCard","galleryCard","imageCard"],"mappings":"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"}