{"version":3,"file":"kg-default-nodes.js","sources":["../lib/KoenigDecoratorNode.js","../lib/nodes/image/ImageParser.js","../lib/utils/get-available-image-widths.js","../lib/utils/is-local-content-image.js","../lib/utils/is-unsplash-image.js","../lib/utils/srcset-attribute.js","../lib/utils/resize-image.js","../lib/nodes/image/ImageRenderer.js","../lib/nodes/image/ImageNode.js","../lib/nodes/codeblock/CodeBlockParser.js","../lib/nodes/codeblock/CodeBlockRenderer.js","../lib/nodes/codeblock/CodeBlockNode.js","../lib/nodes/markdown/MarkdownRenderer.js","../lib/nodes/markdown/MarkdownNode.js","../lib/nodes/video/VideoParser.js","../lib/nodes/video/VideoRenderer.js","../lib/nodes/video/VideoNode.js","../lib/nodes/audio/AudioParser.js","../lib/nodes/audio/AudioRenderer.js","../lib/nodes/audio/AudioNode.js","../lib/kg-default-nodes.js"],"sourcesContent":["import {DecoratorNode} from 'lexical';\n\nexport class KoenigDecoratorNode extends DecoratorNode {}\n\nexport function $isKoenigCard(node) {\n    return node instanceof KoenigDecoratorNode;\n}\n","import cleanBasicHtml from '@tryghost/kg-clean-basic-html';\n\nfunction readImageAttributesFromNode(node) {\n    const attrs = {};\n\n    if (node.src) {\n        attrs.src = node.src;\n    }\n\n    if (node.width) {\n        attrs.width = node.width;\n    } else if (node.dataset && node.dataset.width) {\n        attrs.width = parseInt(node.dataset.width, 10);\n    }\n\n    if (node.height) {\n        attrs.height = node.height;\n    } else if (node.dataset && node.dataset.height) {\n        attrs.height = parseInt(node.dataset.height, 10);\n    }\n\n    if ((!node.width && !node.height) && node.getAttribute('data-image-dimensions')) {\n        const [, width, height] = (/^(\\d*)x(\\d*)$/gi).exec(node.getAttribute('data-image-dimensions'));\n        attrs.width = parseInt(width, 10);\n        attrs.height = parseInt(height, 10);\n    }\n\n    if (node.alt) {\n        attrs.alt = node.alt;\n    }\n\n    if (node.title) {\n        attrs.title = node.title;\n    }\n\n    if (node.parentNode.tagName === 'A') {\n        const href = node.parentNode.href;\n\n        if (href !== attrs.src) {\n            attrs.href = href;\n        }\n    }\n\n    return attrs;\n}\n\nfunction addFigCaptionToPayload(node, payload, {selector = 'figcaption', options}) {\n    let figcaptions = Array.from(node.querySelectorAll(selector));\n\n    if (figcaptions.length) {\n        figcaptions.forEach((caption) => {\n            let cleanHtml = options?.cleanBasicHtml ? options.cleanBasicHtml(caption.innerHTML) : caption.innerHTML;\n            payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n            caption.remove(); // cleanup this processed element\n        });\n    }\n}\n\nexport class ImageParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            img: () => ({\n                conversion(domNode) {\n                    if (domNode.tagName === 'IMG') {\n                        const {src, width, height, alt: altText, title} = readImageAttributesFromNode(domNode);\n\n                        const node = new self.NodeClass({altText, src, title, width, height});\n                        return {node};\n                    }\n\n                    return null;\n                },\n                priority: 1\n            }),\n            figure: (nodeElem) => {\n                if (!nodeElem.querySelector('img')) {\n                    return null;\n                }\n                return {\n                    conversion(domNode) {\n                        const img = domNode.querySelector('img');\n                        const kgClass = domNode.className.match(/kg-width-(wide|full)/);\n                        const grafClass = domNode.className.match(/graf--layout(FillWidth|OutsetCenter)/);\n\n                        if (!img) {\n                            return null;\n                        }\n\n                        const payload = readImageAttributesFromNode(img);\n\n                        if (kgClass) {\n                            payload.cardWidth = kgClass[1];\n                        } else if (grafClass) {\n                            payload.cardWidth = grafClass[1] === 'FillWidth' ? 'full' : 'wide';\n                        }\n                        const options = {\n                            cleanBasicHtml: (html) => {\n                                const cleanedHtml = cleanBasicHtml(html, {\n                                    createDocument: (_html) => {\n                                        const newDoc = domNode.ownerDocument.implementation.createHTMLDocument();\n                                        newDoc.body.innerHTML = _html;\n                                        return newDoc;\n                                    }\n                                });\n                                return cleanedHtml;\n                            }\n                        };\n                        addFigCaptionToPayload(domNode, payload, {options});\n\n                        const {src, width, height, alt: altText, title, caption, cardWidth, href} = payload;\n                        const node = new self.NodeClass({altText, src, title, width, height, caption, cardWidth, href});\n                        return {node};\n                    },\n                    priority: 1\n                };\n            }\n        };\n    }\n}\n","export const getAvailableImageWidths = function (image, imageSizes) {\n    // get a sorted list of the available responsive widths\n    const imageWidths = Object.values(imageSizes)\n        .map(({width}) => width)\n        .sort((a, b) => a - b);\n\n    // select responsive widths that are usable based on the image width\n    const availableImageWidths = imageWidths\n        .filter(width => width <= image.width);\n\n    // add the original image size to the responsive list if it's not captured by largest responsive size\n    // - we can't know the width/height of the original `src` image because we don't know if it was resized\n    //   or not. Adding the original image to the responsive list ensures we're not showing smaller sized\n    //   images than we need to be\n    if (image.width > availableImageWidths[availableImageWidths.length - 1] && image.width < imageWidths[imageWidths.length - 1]) {\n        availableImageWidths.push(image.width);\n    }\n\n    return availableImageWidths;\n};\n","export const isLocalContentImage = function (url, siteUrl = '') {\n    const normalizedSiteUrl = siteUrl.replace(/\\/$/, '');\n    const imagePath = url.replace(normalizedSiteUrl, '');\n    return /^(\\/.*|__GHOST_URL__)\\/?content\\/images\\//.test(imagePath);\n};\n","export const isUnsplashImage = function (url) {\n    return /images\\.unsplash\\.com/.test(url);\n};\n","import {isLocalContentImage} from './is-local-content-image';\nimport {getAvailableImageWidths} from './get-available-image-widths';\nimport {isUnsplashImage} from './is-unsplash-image';\n\n// default content sizes: [600, 1000, 1600, 2400]\n\nexport const getSrcsetAttribute = function ({src, width, options}) {\n    if (!options.imageOptimization || options.imageOptimization.srcsets === false || !width || !options.imageOptimization.contentImageSizes) {\n        return;\n    }\n\n    if (isLocalContentImage(src, options.siteUrl) && options.canTransformImage && !options.canTransformImage(src)) {\n        return;\n    }\n\n    const srcsetWidths = getAvailableImageWidths({width}, options.imageOptimization.contentImageSizes);\n\n    // apply srcset if this is a relative image that matches Ghost's image url structure\n    if (isLocalContentImage(src, options.siteUrl)) {\n        const [, imagesPath, filename] = src.match(/(.*\\/content\\/images)\\/(.*)/);\n        const srcs = [];\n\n        srcsetWidths.forEach((srcsetWidth) => {\n            if (srcsetWidth === width) {\n                // use original image path if width matches exactly (avoids 302s from size->original)\n                srcs.push(`${src} ${srcsetWidth}w`);\n            } else if (srcsetWidth <= width) {\n                // avoid creating srcset sizes larger than intrinsic image width\n                srcs.push(`${imagesPath}/size/w${srcsetWidth}/${filename} ${srcsetWidth}w`);\n            }\n        });\n\n        if (srcs.length) {\n            return srcs.join(', ');\n        }\n    }\n\n    // apply srcset if this is an Unsplash image\n    if (isUnsplashImage(src)) {\n        const unsplashUrl = new URL(src);\n        const srcs = [];\n\n        srcsetWidths.forEach((srcsetWidth) => {\n            unsplashUrl.searchParams.set('w', srcsetWidth);\n            srcs.push(`${unsplashUrl.href} ${srcsetWidth}w`);\n        });\n\n        return srcs.join(', ');\n    }\n};\n\nexport const setSrcsetAttribute = function (elem, image, options) {\n    if (!elem || !['IMG', 'SOURCE'].includes(elem.tagName) || !elem.getAttribute('src') || !image) {\n        return;\n    }\n\n    const {src, width} = image;\n    const srcset = getSrcsetAttribute({src, width, options});\n\n    if (srcset) {\n        elem.setAttribute('srcset', srcset);\n    }\n};\n","export const resizeImage = function (image, {width: desiredWidth, height: desiredHeight} = {}) {\n    const {width, height} = image;\n    const ratio = width / height;\n\n    if (desiredWidth) {\n        const resizedHeight = Math.round(desiredWidth / ratio);\n\n        return {\n            width: desiredWidth,\n            height: resizedHeight\n        };\n    }\n\n    if (desiredHeight) {\n        const resizedWidth = Math.round(desiredHeight * ratio);\n\n        return {\n            width: resizedWidth,\n            height: desiredHeight\n        };\n    }\n};\n","import {getAvailableImageWidths} from '../../utils/get-available-image-widths';\nimport {isLocalContentImage} from '../../utils/is-local-content-image';\nimport {setSrcsetAttribute} from '../../utils/srcset-attribute';\nimport {resizeImage} from '../../utils/resize-image';\n\nexport function renderImageNodeToDOM(node, options = {}) {\n    /* c8 ignore start */\n    if (!options.createDocument) {\n        let document = typeof window !== 'undefined' && window.document;\n\n        if (!document) {\n            throw new Error('renderImageNodeToDOM() must be passed a `createDocument` function as an option when used in a non-browser environment'); // eslint-disable-line\n        }\n\n        options.createDocument = function () {\n            return document;\n        };\n    }\n    /* c8 ignore stop */\n\n    const document = options.createDocument();\n\n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    const figure = document.createElement('figure');\n\n    let figureClasses = 'kg-card kg-image-card';\n    if (node.getCardWidth() !== 'regular') {\n        figureClasses += ` kg-width-${node.getCardWidth()}`;\n    }\n\n    figure.setAttribute('class', figureClasses);\n\n    const img = document.createElement('img');\n    img.setAttribute('src', node.getSrc());\n    img.setAttribute('alt', node.getAltText());\n    img.setAttribute('loading', 'lazy');\n\n    if (node.getTitle()) {\n        img.setAttribute('title', node.getTitle());\n    }\n\n    if (node.getImgWidth() && node.getImgHeight()) {\n        img.setAttribute('width', node.getImgWidth());\n        img.setAttribute('height', node.getImgHeight());\n    }\n\n    // images can be resized to max width, if that's the case output\n    // the resized width/height attrs to ensure 3rd party gallery plugins\n    // aren't affected by differing sizes\n    const {canTransformImage} = options;\n    const {defaultMaxWidth} = options.imageOptimization || {};\n    if (\n        defaultMaxWidth &&\n            node.getImgWidth() > defaultMaxWidth &&\n            isLocalContentImage(node.getSrc(), options.siteUrl) &&\n            canTransformImage &&\n            canTransformImage(node.getSrc())\n    ) {\n        const imageDimensions = {\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        const {width, height} = resizeImage(imageDimensions, {width: defaultMaxWidth});\n        img.setAttribute('width', width);\n        img.setAttribute('height', height);\n    }\n\n    if (options.target !== 'email') {\n        const imgAttributes = {\n            src: node.getSrc(),\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        setSrcsetAttribute(img, imgAttributes, options);\n\n        if (img.getAttribute('srcset') && node.getImgWidth() && node.getImgWidth() >= 720) {\n            // standard size\n            if (!node.getCardWidth() || node.getCardWidth() === 'regular') {\n                img.setAttribute('sizes', '(min-width: 720px) 720px');\n            }\n\n            if (node.getCardWidth() === 'wide' && node.getImgWidth() >= 1200) {\n                img.setAttribute('sizes', '(min-width: 1200px) 1200px');\n            }\n        }\n    }\n\n    // Outlook is unable to properly resize images without a width/height\n    // so we add that at the expected size in emails (600px) and use a higher\n    // resolution image to keep images looking good on retina screens\n    if (options.target === 'email' && node.getImgWidth() && node.getImgHeight()) {\n        let imageDimensions = {\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        if (node.getImgWidth() >= 600) {\n            imageDimensions = resizeImage(imageDimensions, {width: 600});\n        }\n        img.setAttribute('width', imageDimensions.width);\n        img.setAttribute('height', imageDimensions.height);\n\n        if (isLocalContentImage(node.getSrc(), options.siteUrl) && options.canTransformImage?.(node.getSrc())) {\n            // find available image size next up from 2x600 so we can use it for the \"retina\" src\n            const availableImageWidths = getAvailableImageWidths(node, options.imageOptimization.contentImageSizes);\n            const srcWidth = availableImageWidths.find(width => width >= 1200);\n\n            if (!srcWidth || srcWidth === node.getImgWidth()) {\n                // do nothing, width is smaller than retina or matches the original node src\n            } else {\n                const [, imagesPath, filename] = node.getSrc().match(/(.*\\/content\\/images)\\/(.*)/);\n                img.setAttribute('src', `${imagesPath}/size/w${srcWidth}/${filename}`);\n            }\n        }\n    }\n\n    if (node.getHref()) {\n        const a = document.createElement('a');\n        a.setAttribute('href', node.getHref());\n        a.appendChild(img);\n        figure.appendChild(a);\n    } else {\n        figure.appendChild(img);\n    }\n\n    if (node.getCaption()) {\n        const caption = document.createElement('figcaption');\n        caption.innerHTML = node.getCaption();\n        figure.appendChild(caption);\n    }\n\n    return figure;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {ImageParser} from './ImageParser';\nimport {renderImageNodeToDOM} from './ImageRenderer';\n\nexport const INSERT_IMAGE_COMMAND = createCommand();\nexport const UPLOAD_IMAGE_COMMAND = createCommand();\n\nexport class ImageNode extends KoenigDecoratorNode {\n    // payload properties\n    __src;\n    __caption;\n    __title;\n    __altText;\n    __cardWidth;\n    __width;\n    __height;\n    __href;\n\n    static getType() {\n        return 'image';\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            src: 'url',\n            href: 'url',\n            caption: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            src: self.__src,\n            caption: self.__caption,\n            title: self.__title,\n            altText: self.__altText,\n            width: self.__width,\n            height: self.__height,\n            cardWidth: self.__cardWidth,\n            href: self.__href\n        };\n    }\n\n    constructor({src, caption, title, altText, cardWidth, width, height, href} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__title = title || '';\n        this.__caption = caption || '';\n        this.__altText = altText || '';\n        this.__width = width || null;\n        this.__height = height || null;\n        this.__cardWidth = cardWidth || 'regular';\n        this.__href = href || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {src, caption, title, altText, width, height, cardWidth, href} = serializedNode;\n        const node = new this({\n            src,\n            caption,\n            title,\n            altText,\n            width,\n            height,\n            href,\n            cardWidth\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: 'image',\n            version: 1,\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            width: this.getImgWidth(),\n            height: this.getImgHeight(),\n            title: this.getTitle(),\n            altText: this.getAltText(),\n            caption: this.getCaption(),\n            cardWidth: this.getCardWidth(),\n            href: this.getHref()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new ImageParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderImageNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getSrc() {\n        const self = this.getLatest();\n        return self.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        return writable.__src = src;\n    }\n\n    getTitle() {\n        const self = this.getLatest();\n        return self.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        return writable.__title = title;\n    }\n\n    getHref() {\n        const self = this.getLatest();\n        return self.__href;\n    }\n\n    setHref(href) {\n        const writable = this.getWritable();\n        return writable.__href = href;\n    }\n\n    setCardWidth(cardWidth) {\n        const writable = this.getWritable();\n        return writable.__cardWidth = cardWidth;\n    }\n\n    getCardWidth() {\n        const self = this.getLatest();\n        return self.__cardWidth;\n    }\n\n    getImgWidth() {\n        const self = this.getLatest();\n        return self.__width;\n    }\n\n    setImgWidth(width) {\n        const writable = this.getWritable();\n        return writable.__width = width;\n    }\n\n    getImgHeight() {\n        const self = this.getLatest();\n        return self.__height;\n    }\n\n    setImgHeight(height) {\n        const writable = this.getWritable();\n        return writable.__height = height;\n    }\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const writable = this.getWritable();\n        return writable.__caption = caption;\n    }\n\n    getAltText() {\n        const self = this.getLatest();\n        return self.__altText;\n    }\n\n    setAltText(altText) {\n        const writable = this.getWritable();\n        return writable.__altText = altText;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n}\n\nexport const $createImageNode = (dataset) => {\n    return new ImageNode(dataset);\n};\n\nexport function $isImageNode(node) {\n    return node instanceof ImageNode;\n}\n","export class CodeBlockParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            figure: () => ({\n                conversion(domNode) {\n                    if (domNode.tagName === 'FIGURE') {\n                        const pre = domNode.querySelector('pre');\n\n                        // If this figure doesn't have a pre tag in it\n                        if (!pre) {\n                            return null;\n                        }\n\n                        let code = pre.querySelector('code');\n                        let figcaption = domNode.querySelector('figcaption');\n\n                        // if there's no caption the pre key should pick it up\n                        if (!code || !figcaption) {\n                            return null;\n                        }\n\n                        let payload = {\n                            code: code.textContent\n                        };\n\n                        let figcaptions = Array.from(domNode.querySelectorAll('figcaption'));\n                        if (figcaptions.length) {\n                            figcaptions.forEach((caption) => {\n                                //TODO: use cleanBasicHtml here\n                                // let cleanHtml = cleanBasicHtml(caption.innerHTML);\n                                let cleanHtml = caption.innerHTML;\n                                payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n                                caption.remove(); // cleanup this processed element\n                            });\n                        }\n\n                        let preClass = pre.getAttribute('class') || '';\n                        let codeClass = code.getAttribute('class') || '';\n                        let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n                        let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n                        if (languageMatches) {\n                            payload.language = languageMatches[1].toLowerCase();\n                        }\n\n                        const node = new self.NodeClass(payload);\n                        return {node};\n                    }\n                    return null;\n                },\n                priority: 1\n            }),\n            pre: () => ({\n                conversion(domNode) {\n                    if (domNode.tagName === 'PRE') {\n                        let [codeElement] = domNode.children;\n\n                        if (codeElement && codeElement.tagName === 'CODE') {\n                            let payload = {code: codeElement.textContent};\n                            let preClass = domNode.getAttribute('class') || '';\n                            let codeClass = codeElement.getAttribute('class') || '';\n                            let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n                            let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n                            if (languageMatches) {\n                                payload.language = languageMatches[1].toLowerCase();\n                            }\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        }\n                    }\n\n                    return null;\n                },\n                priority: 1\n            })\n        };\n    }\n}\n","export function renderCodeBlockNodeToDOM(node, options = {}) {\n    /* c8 ignore start */\n    if (!options.createDocument) {\n        let document = typeof window !== 'undefined' && window.document;\n\n        if (!document) {\n            throw new Error('renderImageNodeToDOM() must be passed a `createDocument` function as an option when used in a non-browser environment'); // eslint-disable-line\n        }\n\n        options.createDocument = function () {\n            return document;\n        };\n    }\n    /* c8 ignore stop */\n\n    const document = options.createDocument();\n\n    if (!node.getCode() || node.getCode().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    const pre = document.createElement('pre');\n    const code = document.createElement('code');\n\n    if (node.getLanguage()) {\n        code.setAttribute('class', `language-${node.getLanguage()}`);\n    }\n\n    code.appendChild(document.createTextNode(node.getCode()));\n    pre.appendChild(code);\n\n    if (node.getCaption()) {\n        let figure = document.createElement('figure');\n        figure.setAttribute('class', 'kg-card kg-code-card');\n        figure.appendChild(pre);\n\n        let figcaption = document.createElement('figcaption');\n        figcaption.appendChild(document.createTextNode(node.getCaption()));\n        figure.appendChild(figcaption);\n\n        return figure;\n    } else {\n        return pre;\n    }\n}","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {CodeBlockParser} from './CodeBlockParser';\nimport {renderCodeBlockNodeToDOM} from './CodeBlockRenderer';\n\nexport const INSERT_CODE_BLOCK_COMMAND = createCommand();\n\nexport class CodeBlockNode extends KoenigDecoratorNode {\n    __code;\n    __language;\n    __caption;\n\n    static getType() {\n        return 'codeblock';\n    }\n\n    static clone(node) {\n        // must use `this` so the extended class in the Editor uses the correct class when cloning\n        // without needing to override this method\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            caption: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            code: self.__code,\n            language: self.__language,\n            caption: self.__caption\n        };\n    }\n\n    static importJSON(serializedNode) {\n        const {code, language, caption} = serializedNode;\n        const node = new this({code, language, caption});\n        return node;\n    }\n\n    exportJSON() {\n        return {\n            type: 'codeblock',\n            version: 1,\n            code: this.__code,\n            language: this.__language,\n            caption: this.__caption\n        };\n    }\n\n    constructor({code, language, caption} = {}, key) {\n        super(key);\n        this.__code = code;\n        this.__language = language;\n        this.__caption = caption;\n    }\n\n    static importDOM() {\n        const parser = new CodeBlockParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderCodeBlockNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        return document.createElement('div');\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const self = this.getWritable();\n        self.__caption = caption;\n    }\n\n    getCode() {\n        const self = this.getLatest();\n        return self.__code;\n    }\n\n    setCode(code) {\n        const self = this.getWritable();\n        self.__code = code;\n    }\n\n    getLanguage() {\n        const self = this.getLatest();\n        return self.__language;\n    }\n\n    setLanguage(language) {\n        const self = this.getWritable();\n        self.__language = language;\n    }\n\n    getTextContent() {\n        const self = this.getLatest();\n        return self.__code;\n    }\n\n    // should be overwritten\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__code;\n    }\n}\n\nexport function $createCodeBlockNode(dataset) {\n    return new CodeBlockNode(dataset);\n}\n\nexport function $isCodeBlockNode(node) {\n    return node instanceof CodeBlockNode;\n}\n","import markdownHtmlRenderer from '@tryghost/kg-markdown-html-renderer';\n\nexport function renderMarkdownNodeToDOM(node, options = {}) {\n    /* c8 ignore start */\n    if (!options.createDocument) {\n        let document = typeof window !== 'undefined' && window.document;\n\n        if (!document) {\n            throw new Error('renderMarkdownNodeToDOM() must be passed a `createDocument` function as an option when used in a non-browser environment'); // eslint-disable-line\n        }\n\n        options.createDocument = function () {\n            return document;\n        };\n    }\n    /* c8 ignore stop */\n\n    const document = options.createDocument();\n\n    const html = markdownHtmlRenderer.render(node.getMarkdown() || '', options);\n\n    const div = document.createElement('div');\n\n    div.innerHTML = html;\n\n    return div;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {renderMarkdownNodeToDOM} from './MarkdownRenderer';\n\nexport const INSERT_MARKDOWN_COMMAND = createCommand();\n\nexport class MarkdownNode extends KoenigDecoratorNode {\n    __markdown;\n\n    static getType() {\n        return 'markdown';\n    }\n\n    static clone(node) {\n        return new this(node.getDataset(), node.__key);\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            markdown: 'markdown'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            markdown: self.__markdown\n        };\n    }\n\n    static importJSON(serializedNode) {\n        const {markdown} = serializedNode;\n        const node = new this({markdown});\n        return node;\n    }\n\n    exportJSON() {\n        return {\n            type: 'markdown',\n            version: 1,\n            markdown: this.getMarkdown()\n        };\n    }\n\n    constructor({markdown} = {}, key) {\n        super(key);\n        this.__markdown = markdown;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderMarkdownNodeToDOM(this, options);\n        return {\n            element,\n            type: 'inner'\n        };\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getMarkdown() {\n        return this.__markdown;\n    }\n\n    setMarkdown(markdown) {\n        const writable = this.getWritable();\n        return writable.__markdown = markdown;\n    }\n\n    // should be overwritten\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__markdown;\n    }\n}\n\nexport function $createMarkdownNode(dataset) {\n    return new MarkdownNode(dataset);\n}\n\nexport function $isMarkdownNode(node) {\n    return node instanceof MarkdownNode;\n}\n","export class VideoParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            figure: () => ({\n                conversion(domNode) {\n                    const isKgVideoCard = domNode.classList?.contains('kg-video-card');\n                    if (domNode.tagName === 'FIGURE' && isKgVideoCard) {\n                        const videoNode = domNode.querySelector('.kg-video-container video');\n                        const durationNode = domNode.querySelector('.kg-video-duration');\n                        const videoSrc = videoNode && videoNode.src;\n                        const videoWidth = videoNode && videoNode.width;\n                        const videoHeight = videoNode && videoNode.height;\n                        const durationText = durationNode && durationNode.innerHTML.trim();\n                        const captionNode = domNode.querySelector('figcaption');\n                        const captionText = captionNode && captionNode.innerHTML.trim();\n\n                        if (!videoSrc) {\n                            return null;\n                        }\n\n                        const payload = {\n                            src: videoSrc,\n                            loop: !!videoNode.loop,\n                            cardWidth: getCardWidth(videoNode)\n                        };\n\n                        if (durationText) {\n                            const [minutes, seconds] = durationText.split(':');\n                            try {\n                                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n                            } catch (e) {\n                                // ignore duration\n                            }\n                        }\n\n                        if (domNode.dataset.kgThumbnail) {\n                            payload.thumbnailSrc = domNode.dataset.kgThumbnail;\n                        }\n\n                        if (domNode.dataset.kgCustomThumbnail) {\n                            payload.customThumbnailSrc = domNode.dataset.kgCustomThumbnail;\n                        }\n\n                        if (captionText) {\n                            payload.caption = captionText;\n                        }\n\n                        if (videoWidth) {\n                            payload.width = videoWidth;\n                        }\n\n                        if (videoHeight) {\n                            payload.height = videoHeight;\n                        }\n\n                        const node = new self.NodeClass(payload);\n                        return {node};\n                    }\n\n                    return null;\n                },\n                priority: 1\n            })\n        };\n    }\n}\n\nfunction getCardWidth(domNode) {\n    if (domNode.classList.contains('kg-width-full')) {\n        return 'full';\n    } else if (domNode.classList.contains('kg-width-wide')) {\n        return 'wide';\n    } else {\n        return 'regular';\n    }\n}\n","export function renderVideoNodeToDOM(node, options = {}) {\n    /* c8 ignore start */\n    if (!options.createDocument) {\n        let document = typeof window !== 'undefined' && window.document;\n\n        if (!document) {\n            throw new Error('renderVideoNodeToDOM() must be passed a `createDocument` function as an option when used in a non-browser environment'); // eslint-disable-line\n        }\n\n        options.createDocument = function () {\n            return document;\n        };\n    }\n    /* c8 ignore stop */\n\n    const document = options.createDocument();\n\n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    const cardClasses = getCardClasses(node).join(' ');\n\n    const htmlString = options.target === 'email'\n        ? emailCardTemplate({node, options, cardClasses})\n        : cardTemplate({node, cardClasses});\n\n    const element = document.createElement('div');\n    element.innerHTML = htmlString.trim();\n\n    return element.firstElementChild;\n}\n\nexport function cardTemplate({node, cardClasses}) {\n    const width = node.getVideoWidth();\n    const height = node.getVideoHeight();\n    const posterSpacerSrc = `https://img.spacergif.org/v1/${width}x${height}/0a/spacer.png`;\n    const autoplayAttr = node.getLoop() ? 'loop autoplay muted' : '';\n    const thumbnailSrc = node.getCustomThumbnailSrc() || node.getThumbnailSrc();\n    const hideControlsClass = node.getLoop() ? ' kg-video-hide' : '';\n\n    return (\n        `\n        <figure class=\"${cardClasses}\" data-kg-thumbnail=${node.getThumbnailSrc()} data-kg-custom-thumbnail=${node.getCustomThumbnailSrc()}>\n            <div class=\"kg-video-container\">\n                <video\n                    src=\"${node.getSrc()}\"\n                    poster=\"${posterSpacerSrc}\"\n                    width=\"${width}\"\n                    height=\"${height}\"\n                    ${autoplayAttr}\n                    playsinline\n                    preload=\"metadata\"\n                    style=\"background: transparent url('${thumbnailSrc}') 50% 50% / cover no-repeat;\"\n                ></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"/>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container${hideControlsClass}\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">${node.getFormattedDuration()}</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\">1&#215;</button>\n                        <button class=\"kg-video-unmute-icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\"/>\n                    </div>\n                </div>\n            </div>\n            ${node.getCaption() ? `<figcaption>${node.getCaption()}</figcaption>` : ''}\n        </figure>\n    `\n    );\n}\n\nexport function emailCardTemplate({node, options, cardClasses}) {\n    const thumbnailSrc = node.getCustomThumbnailSrc() || node.getThumbnailSrc();\n    const emailTemplateMaxWidth = 600;\n    const aspectRatio = node.getVideoWidth() / node.getVideoHeight();\n    const emailSpacerWidth = Math.round(emailTemplateMaxWidth / 4);\n    const emailSpacerHeight = Math.round(emailTemplateMaxWidth / aspectRatio);\n    const posterSpacerSrc = `https://img.spacergif.org/v1/${emailSpacerWidth}x${emailSpacerHeight}/0a/spacer.png`;\n    const outlookCircleLeft = Math.round((emailTemplateMaxWidth / 2) - 39);\n    const outlookCircleTop = Math.round((emailSpacerHeight / 2) - 39);\n    const outlookPlayLeft = Math.round((emailTemplateMaxWidth / 2) - 11);\n    const outlookPlayTop = Math.round((emailSpacerHeight / 2) - 17);\n\n    return (\n        `\n         <figure class=\"${cardClasses}\">\n            <!--[if !mso !vml]-->\n            <a class=\"kg-video-preview\" href=\"${options.postUrl}\" aria-label=\"Play video\" style=\"mso-hide: all\">\n                <table\n                    cellpadding=\"0\"\n                    cellspacing=\"0\"\n                    border=\"0\"\n                    width=\"100%\"\n                    background=\"${thumbnailSrc}\"\n                    role=\"presentation\"\n                    style=\"background: url('${thumbnailSrc}') left top / cover; mso-hide: all\"\n                >\n                    <tr style=\"mso-hide: all\">\n                        <td width=\"25%\" style=\"visibility: hidden; mso-hide: all\">\n                            <img src=\"${posterSpacerSrc}\" alt=\"\" width=\"100%\" border=\"0\" style=\"height: auto; opacity: 0; visibility: hidden; mso-hide: all;\">\n                        </td>\n                        <td width=\"50%\" align=\"center\" valign=\"middle\" style=\"vertical-align: middle; mso-hide: all;\">\n                            <div class=\"kg-video-play-button\" style=\"mso-hide: all\"><div style=\"mso-hide: all\"></div></div>\n                        </td>\n                        <td width=\"25%\" style=\"mso-hide: all\">&nbsp;</td>\n                    </tr>\n                </table>\n            </a>\n            <!--[endif]-->\n\n            <!--[if vml]>\n            <v:group xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:w=\"urn:schemas-microsoft-com:office:word\" coordsize=\"${emailTemplateMaxWidth},${emailSpacerHeight}\" coordorigin=\"0,0\" href=\"${options.postUrl}\" style=\"width:${emailTemplateMaxWidth}px;height:${emailSpacerHeight}px;\">\n                <v:rect fill=\"t\" stroked=\"f\" style=\"position:absolute;width:${emailTemplateMaxWidth};height:${emailSpacerHeight};\"><v:fill src=\"${thumbnailSrc}\" type=\"frame\"/></v:rect>\n                <v:oval fill=\"t\" strokecolor=\"white\" strokeweight=\"4px\" style=\"position:absolute;left:${outlookCircleLeft};top:${outlookCircleTop};width:78;height:78\"><v:fill color=\"black\" opacity=\"30%\" /></v:oval>\n                <v:shape coordsize=\"24,32\" path=\"m,l,32,24,16,xe\" fillcolor=\"white\" stroked=\"f\" style=\"position:absolute;left:${outlookPlayLeft};top:${outlookPlayTop};width:30;height:34;\" />\n            </v:group>\n            <![endif]-->\n\n            ${node.getCaption() ? `<figcaption>${node.getCaption()}</figcaption>` : ''}\n        </figure>\n        `\n    );\n}\n\nexport function getCardClasses(node) {\n    let cardClasses = ['kg-card kg-video-card'];\n\n    if (node.getCardWidth()) {\n        cardClasses.push(`kg-width-${node.getCardWidth()}`);\n    }\n    if (node.getCaption()) {\n        cardClasses.push(`kg-card-hascaption`);\n    }\n\n    return cardClasses;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {VideoParser} from './VideoParser';\nimport {renderVideoNodeToDOM} from './VideoRenderer';\n\nexport const INSERT_VIDEO_COMMAND = createCommand();\nconst NODE_TYPE = 'video';\n\nexport class VideoNode extends KoenigDecoratorNode {\n    // payload properties\n    __src;\n    __caption;\n    __width;\n    __height;\n    __duration;\n    __thumbnailSrc;\n    __customThumbnailSrc;\n    __cardWidth;\n    __loop;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            src: 'url',\n            thumbnailSrc: 'url',\n            customThumbnailSrc: 'url',\n            caption: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            src: self.__src,\n            caption: self.__caption,\n            width: self.__width,\n            height: self.__height,\n            duration: self.__duration,\n            thumbnailSrc: self.__thumbnailSrc,\n            customThumbnailSrc: self.__customThumbnailSrc,\n            cardWidth: self.__cardWidth,\n            loop: self.__loop\n        };\n    }\n\n    constructor({src, caption, width, height, duration, thumbnailSrc, customThumbnailSrc, cardWidth, loop} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__caption = caption || '';\n        this.__width = width || null;\n        this.__height = height || null;\n        this.__duration = duration || 0;\n        this.__thumbnailSrc = thumbnailSrc || '';\n        this.__customThumbnailSrc = customThumbnailSrc || '';\n        this.__cardWidth = cardWidth || 'regular';\n        this.__loop = !!loop;\n    }\n\n    static importJSON(serializedNode) {\n        const {src, caption, width, height, duration, thumbnailSrc, customThumbnailSrc, cardWidth, loop} = serializedNode;\n        const node = new this({\n            src,\n            caption,\n            width,\n            height,\n            duration,\n            thumbnailSrc,\n            customThumbnailSrc,\n            cardWidth,\n            loop\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            caption: this.getCaption(),\n            width: this.getVideoWidth(),\n            height: this.getVideoHeight(),\n            duration: this.getDuration(),\n            thumbnailSrc: this.getThumbnailSrc(),\n            customThumbnailSrc: this.getCustomThumbnailSrc(),\n            cardWidth: this.getCardWidth(),\n            loop: this.getLoop()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new VideoParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderVideoNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getSrc() {\n        const self = this.getLatest();\n        return self.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        return writable.__src = src;\n    }\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const writable = this.getWritable();\n        return writable.__caption = caption;\n    }\n\n    getVideoWidth() {\n        const self = this.getLatest();\n        return self.__width;\n    }\n\n    setVideoWidth(width) {\n        const writable = this.getWritable();\n        return writable.__width = width;\n    }\n\n    getVideoHeight() {\n        const self = this.getLatest();\n        return self.__height;\n    }\n\n    setVideoHeight(height) {\n        const writable = this.getWritable();\n        return writable.__height = height;\n    }\n\n    getDuration() {\n        const self = this.getLatest();\n        return self.__duration;\n    }\n\n    getFormattedDuration() {\n        const minutes = Math.floor(this.getDuration() / 60);\n        const seconds = Math.floor(this.getDuration() - (minutes * 60));\n        const paddedSeconds = String(seconds).padStart(2, '0');\n        const formattedDuration = `${minutes}:${paddedSeconds}`;\n        return formattedDuration;\n    }\n\n    setDuration(duration) {\n        const writable = this.getWritable();\n        return writable.__duration = duration;\n    }\n\n    getThumbnailSrc() {\n        const self = this.getLatest();\n        return self.__thumbnailSrc;\n    }\n\n    setThumbnailSrc(thumbnailSrc) {\n        const writable = this.getWritable();\n        return writable.__thumbnailSrc = thumbnailSrc;\n    }\n\n    getCustomThumbnailSrc() {\n        const self = this.getLatest();\n        return self.__customThumbnailSrc;\n    }\n\n    setCustomThumbnailSrc(customThumbnailSrc) {\n        const writable = this.getWritable();\n        return writable.__customThumbnailSrc = customThumbnailSrc;\n    }\n\n    setCardWidth(cardWidth) {\n        const writable = this.getWritable();\n        return writable.__cardWidth = cardWidth;\n    }\n\n    getCardWidth() {\n        const self = this.getLatest();\n        return self.__cardWidth;\n    }\n\n    getLoop() {\n        const self = this.getLatest();\n        return self.__loop;\n    }\n\n    setLoop(loop) {\n        const writable = this.getWritable();\n        return writable.__loop = loop;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__src;\n    }\n}\n\nexport const $createVideoNode = (dataset) => {\n    return new VideoNode(dataset);\n};\n\nexport function $isVideoNode(node) {\n    return node instanceof VideoNode;\n}\n","export class AudioParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            div: (nodeElem) => {\n                const isKgAudioCard = nodeElem.classList?.contains('kg-audio-card');\n                if (nodeElem.tagName === 'DIV' && isKgAudioCard) {\n                    return {\n                        conversion(domNode) {\n                            const titleNode = domNode?.querySelector('.kg-audio-title');\n                            const audioNode = domNode?.querySelector('.kg-audio-player-container audio');\n                            const durationNode = domNode?.querySelector('.kg-audio-duration');\n                            const thumbnailNode = domNode?.querySelector('.kg-audio-thumbnail');\n                            const title = titleNode && titleNode.innerHTML.trim();\n                            const audioSrc = audioNode && audioNode.src;\n                            const thumbnailSrc = thumbnailNode && thumbnailNode.src;\n                            const durationText = durationNode && durationNode.innerHTML.trim();\n                            const payload = {\n                                src: audioSrc,\n                                title: title\n                            };\n                            if (thumbnailSrc) {\n                                payload.thumbnailSrc = thumbnailSrc;\n                            }\n\n                            if (durationText) {\n                                const [minutes, seconds = 0] = durationText.split(':');\n                                try {\n                                    payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n                                } catch (e) {\n                                    // ignore duration\n                                }\n                            }\n\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        },\n                        priority: 1\n                    };\n                }\n                return null;\n            }\n        };\n    }\n}\n","// WIP\nexport function renderAudioNodeToDOM(node, options = {}) {\n    /* c8 ignore start */\n    if (!options.createDocument) {\n        let document = typeof window !== 'undefined' && window.document;\n\n        if (!document) {\n            throw new Error('renderAudioNodeToDOM() must be passed a `createDocument` function as an option when used in a non-browser environment'); // eslint-disable-line\n        }\n\n        options.createDocument = function () {\n            return document;\n        };\n    }\n    /* c8 ignore stop */\n\n    const document = options.createDocument();\n\n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    return frontendTemplate(node, document);\n}\n\nfunction frontendTemplate(node, document) {\n    let thumbnailCls = 'kg-audio-thumbnail';\n    let emptyThumbnailCls = 'kg-audio-thumbnail placeholder';\n    if (!node.getThumbnailSrc()) {\n        thumbnailCls += ' kg-audio-hide';\n    } else {\n        emptyThumbnailCls += ' kg-audio-hide';\n    }\n\n    const cardDiv = document.createElement('div');\n    cardDiv.setAttribute('class', 'kg-card kg-audio-card');\n    const img = document.createElement('img');\n    img.src = node.getThumbnailSrc();\n    img.alt = 'audio-thumbnail';\n    img.setAttribute('class', thumbnailCls);\n    cardDiv.appendChild(img);\n\n    const emptyThumbnailDiv = document.createElement('div');\n    emptyThumbnailDiv.setAttribute('class', emptyThumbnailCls);\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', '24');\n    svg.setAttribute('height', '24');\n    svg.setAttribute('fill', 'none');\n    const path1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path1.setAttribute('fill-rule', 'evenodd');\n    path1.setAttribute('clip-rule', 'evenodd');\n    path1.setAttribute('d', 'M7.5 15.33a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm-2.25.75a2.25 2.25 0 1 1 4.5 0 2.25 2.25 0 0 1-4.5 0ZM15 13.83a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm-2.25.75a2.25 2.25 0 1 1 4.5 0 2.25 2.25 0 0 1-4.5 0Z');\n    svg.appendChild(path1);\n    const path2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path2.setAttribute('fill-rule', 'evenodd');\n    path2.setAttribute('clip-rule', 'evenodd');\n    path2.setAttribute('d', 'M14.486 6.81A2.25 2.25 0 0 1 17.25 9v5.579a.75.75 0 0 1-1.5 0v-5.58a.75.75 0 0 0-.932-.727.755.755 0 0 1-.059.013l-4.465.744a.75.75 0 0 0-.544.72v6.33a.75.75 0 0 1-1.5 0v-6.33a2.25 2.25 0 0 1 1.763-2.194l4.473-.746Z');\n    svg.appendChild(path2);\n    const path3 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path3.setAttribute('fill-rule', 'evenodd');\n    path3.setAttribute('clip-rule', 'evenodd');\n    path3.setAttribute('d', 'M3 1.5a.75.75 0 0 0-.75.75v19.5a.75.75 0 0 0 .75.75h18a.75.75 0 0 0 .75-.75V5.133a.75.75 0 0 0-.225-.535l-.002-.002-3-2.883A.75.75 0 0 0 18 1.5H3ZM1.409.659A2.25 2.25 0 0 1 3 0h15a2.25 2.25 0 0 1 1.568.637l.003.002 3 2.883a2.25 2.25 0 0 1 .679 1.61V21.75A2.25 2.25 0 0 1 21 24H3a2.25 2.25 0 0 1-2.25-2.25V2.25c0-.597.237-1.169.659-1.591Z');\n    svg.appendChild(path3);\n    emptyThumbnailDiv.appendChild(svg);\n\n    cardDiv.appendChild(emptyThumbnailDiv);\n\n    const audioPlayerContainer = document.createElement('div');\n    audioPlayerContainer.setAttribute('class', 'kg-audio-player-container');\n\n    const audioElement = document.createElement('audio');\n    audioElement.setAttribute('src', node.getSrc());\n    audioElement.setAttribute('preload', 'metadata');\n    audioPlayerContainer.appendChild(audioElement);\n\n    const audioTitle = document.createElement('div');\n    audioTitle.setAttribute('class', 'kg-audio-title');\n    audioTitle.textContent = node.getTitle();\n    audioPlayerContainer.appendChild(audioTitle);\n\n    const audioPlayer = document.createElement('div');\n    audioPlayer.setAttribute('class', 'kg-audio-player');\n    const audioPlayIcon = document.createElement('button');\n    audioPlayIcon.setAttribute('class', 'kg-audio-play-icon');\n    const audioPlayIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    audioPlayIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const playPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    playPath.setAttribute('d', 'M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z');\n    audioPlayIconSvg.appendChild(playPath);\n    audioPlayIcon.appendChild(audioPlayIconSvg);\n    audioPlayer.appendChild(audioPlayIcon);\n\n    const audioPauseIcon = document.createElement('button');\n    audioPauseIcon.setAttribute('class', 'kg-audio-pause-icon kg-audio-hide');\n    const audioPauseIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    audioPauseIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const rectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    rectSvg.setAttribute('x', '3');\n    rectSvg.setAttribute('y', '1');\n    rectSvg.setAttribute('width', '7');\n    rectSvg.setAttribute('height', '22');\n    rectSvg.setAttribute('rx', '1.5');\n    rectSvg.setAttribute('ry', '1.5');\n    audioPauseIconSvg.appendChild(rectSvg);\n    const rectSvg2 = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    rectSvg2.setAttribute('x', '14');\n    rectSvg2.setAttribute('y', '1');\n    rectSvg2.setAttribute('width', '7');\n    rectSvg2.setAttribute('height', '22');\n    rectSvg2.setAttribute('rx', '1.5');\n    rectSvg2.setAttribute('ry', '1.5');\n    audioPauseIconSvg.appendChild(rectSvg2);\n    audioPauseIcon.appendChild(audioPauseIconSvg);\n    audioPlayer.appendChild(audioPauseIcon);\n\n    const audioDuration = document.createElement('span');\n    audioDuration.setAttribute('class', 'kg-audio-current-time');\n    audioDuration.textContent = '0:00';\n    audioPlayer.appendChild(audioDuration);\n\n    const audioDurationTotal = document.createElement('div');\n    audioDurationTotal.setAttribute('class', 'kg-audio-time');\n    audioDurationTotal.textContent = '/';\n    const audioDUrationNode = document.createElement('span');\n    audioDUrationNode.setAttribute('class', 'kg-audio-duration');\n    audioDUrationNode.textContent = node.getDuration();\n    audioDurationTotal.appendChild(audioDUrationNode);\n    audioPlayer.appendChild(audioDurationTotal);\n\n    const audioSlider = document.createElement('input');\n    audioSlider.setAttribute('type', 'range');\n    audioSlider.setAttribute('class', 'kg-audio-seek-slider');\n    audioSlider.setAttribute('max', '100');\n    audioSlider.setAttribute('value', '0');\n    audioPlayer.appendChild(audioSlider);\n\n    const playbackRate = document.createElement('button');\n    playbackRate.setAttribute('class', 'kg-audio-playback-rate');\n    playbackRate.innerHTML = '1&#215;'; // innerHTML not textContent because we need the HTML entity\n    audioPlayer.appendChild(playbackRate);\n\n    const unmuteIcon = document.createElement('button');\n    unmuteIcon.setAttribute('class', 'kg-audio-unmute-icon');\n    const unmuteIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    unmuteIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const unmutePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    unmutePath.setAttribute('d', 'M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z');\n    unmuteIconSvg.appendChild(unmutePath);\n    unmuteIcon.appendChild(unmuteIconSvg);\n    audioPlayer.appendChild(unmuteIcon);\n\n    const muteIcon = document.createElement('button');\n    muteIcon.setAttribute('class', 'kg-audio-mute-icon kg-audio-hide');\n    const muteIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    muteIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const mutePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    mutePath.setAttribute('d', 'M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z');\n    muteIconSvg.appendChild(mutePath);\n    muteIcon.appendChild(muteIconSvg);\n    audioPlayer.appendChild(muteIcon);\n\n    const volumeSlider = document.createElement('input');\n    volumeSlider.setAttribute('type', 'range');\n    volumeSlider.setAttribute('class', 'kg-audio-volume-slider');\n    volumeSlider.setAttribute('max', '100');\n    volumeSlider.setAttribute('value', '100');\n    audioPlayer.appendChild(volumeSlider);\n\n    audioPlayerContainer.appendChild(audioPlayer);\n    cardDiv.appendChild(audioPlayerContainer);\n\n    return cardDiv;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {AudioParser} from './AudioParser';\nimport {renderAudioNodeToDOM} from './AudioRenderer';\n\nexport const INSERT_AUDIO_COMMAND = createCommand();\nconst NODE_TYPE = 'audio';\n\nexport class AudioNode extends KoenigDecoratorNode {\n    // payload properties\n    __src;\n    __title;\n    __duration;\n    __mimeType;\n    __thumbnailSrc;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            src: 'url'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            src: self.__src,\n            title: self.__title,\n            duration: self.__duration,\n            mimeType: self.__mimeType,\n            thumbnailSrc: self.__thumbnailSrc\n        };\n    }\n\n    constructor({src, title, duration, thumbnailSrc, mimeType} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__title = title || '';\n        this.__duration = duration || 0;\n        this.__mimeType = mimeType || '';\n        this.__thumbnailSrc = thumbnailSrc || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {src, title, duration, mimeType, thumbnailSrc} = serializedNode;\n        const node = new this({\n            src,\n            title,\n            mimeType,\n            duration,\n            thumbnailSrc\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            title: this.getTitle(),\n            mimeType: this.getMimeType(),\n            duration: this.getDuration(),\n            thumbnailSrc: this.getThumbnailSrc()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new AudioParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderAudioNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getSrc() {\n        const self = this.getLatest();\n        return self.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        return writable.__src = src;\n    }\n\n    getTitle() {\n        const self = this.getLatest();\n        return self.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        return writable.__title = title;\n    }\n\n    getDuration() {\n        const self = this.getLatest();\n        return self.__duration;\n    }\n\n    setDuration(duration) {\n        const writable = this.getWritable();\n        return writable.__duration = duration;\n    }\n\n    getMimeType() {\n        const self = this.getLatest();\n        return self.__mimeType;\n    }\n\n    setMimeType(mimeType) {\n        const writable = this.getWritable();\n        return writable.__mimeType = mimeType;\n    }\n\n    getThumbnailSrc() {\n        const self = this.getLatest();\n        return self.__thumbnailSrc;\n    }\n\n    setThumbnailSrc(thumbnailSrc) {\n        const writable = this.getWritable();\n        return writable.__thumbnailSrc = thumbnailSrc;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__src;\n    }\n}\n\nexport const $createAudioNode = (dataset) => {\n    return new AudioNode(dataset);\n};\n\nexport function $isAudioNode(node) {\n    return node instanceof AudioNode;\n}\n","import * as image from './nodes/image/ImageNode';\nimport * as codeblock from './nodes/codeblock/CodeBlockNode';\nimport * as markdown from './nodes/markdown/MarkdownNode';\nimport * as video from './nodes/video/VideoNode';\nimport * as audio from './nodes/audio/AudioNode';\n\n// re-export everything for easier importing\nexport * from './KoenigDecoratorNode';\nexport * from './nodes/image/ImageNode';\nexport * from './nodes/image/ImageParser';\nexport * from './nodes/codeblock/CodeBlockNode';\nexport * from './nodes/markdown/MarkdownNode';\nexport * from './nodes/video/VideoNode';\nexport * from './nodes/audio/AudioNode';\n\n// export convenience objects for use elsewhere\nexport const DEFAULT_NODES = [\n    codeblock.CodeBlockNode,\n    image.ImageNode,\n    markdown.MarkdownNode,\n    video.VideoNode,\n    audio.AudioNode\n];\n"],"names":["KoenigDecoratorNode","DecoratorNode","$isKoenigCard","node","readImageAttributesFromNode","attrs","src","width","dataset","parseInt","height","getAttribute","exec","alt","title","parentNode","tagName","href","addFigCaptionToPayload","payload","_ref","selector","options","figcaptions","Array","from","querySelectorAll","length","forEach","caption","cleanHtml","cleanBasicHtml","innerHTML","remove","ImageParser","constructor","NodeClass","DOMConversionMap","self","img","conversion","domNode","altText","priority","figure","nodeElem","querySelector","kgClass","className","match","grafClass","cardWidth","html","cleanedHtml","createDocument","_html","newDoc","ownerDocument","implementation","createHTMLDocument","body","getAvailableImageWidths","image","imageSizes","imageWidths","Object","values","map","sort","a","b","availableImageWidths","filter","push","isLocalContentImage","url","siteUrl","arguments","undefined","normalizedSiteUrl","replace","imagePath","test","isUnsplashImage","getSrcsetAttribute","imageOptimization","srcsets","contentImageSizes","canTransformImage","srcsetWidths","imagesPath","filename","srcs","srcsetWidth","join","unsplashUrl","URL","searchParams","set","setSrcsetAttribute","elem","includes","srcset","setAttribute","resizeImage","desiredWidth","desiredHeight","ratio","resizedHeight","Math","round","resizedWidth","renderImageNodeToDOM","document","window","Error","getSrc","trim","createTextNode","createElement","figureClasses","getCardWidth","getAltText","getTitle","getImgWidth","getImgHeight","defaultMaxWidth","imageDimensions","target","imgAttributes","srcWidth","find","getHref","appendChild","getCaption","INSERT_IMAGE_COMMAND","createCommand","UPLOAD_IMAGE_COMMAND","ImageNode","__src","__caption","__title","__altText","__cardWidth","__width","__height","__href","getType","clone","getDataset","__key","urlTransformMap","getLatest","key","importJSON","serializedNode","exportJSON","isBlob","startsWith","type","version","importDOM","parser","exportDOM","element","createDOM","updateDOM","isInline","setSrc","writable","getWritable","setTitle","setHref","setCardWidth","setImgWidth","setImgHeight","setCaption","setAltText","decorate","$createImageNode","$isImageNode","CodeBlockParser","pre","code","figcaption","textContent","preClass","codeClass","langRegex","languageMatches","language","toLowerCase","codeElement","children","renderCodeBlockNodeToDOM","getCode","getLanguage","INSERT_CODE_BLOCK_COMMAND","CodeBlockNode","__code","__language","setCode","setLanguage","getTextContent","hasEditMode","isEmpty","$createCodeBlockNode","$isCodeBlockNode","renderMarkdownNodeToDOM","markdownHtmlRenderer","render","getMarkdown","div","INSERT_MARKDOWN_COMMAND","MarkdownNode","__markdown","markdown","setMarkdown","$createMarkdownNode","$isMarkdownNode","VideoParser","isKgVideoCard","classList","contains","videoNode","durationNode","videoSrc","videoWidth","videoHeight","durationText","captionNode","captionText","loop","minutes","seconds","split","duration","e","kgThumbnail","thumbnailSrc","kgCustomThumbnail","customThumbnailSrc","renderVideoNodeToDOM","cardClasses","getCardClasses","htmlString","emailCardTemplate","cardTemplate","firstElementChild","getVideoWidth","getVideoHeight","posterSpacerSrc","autoplayAttr","getLoop","getCustomThumbnailSrc","getThumbnailSrc","hideControlsClass","getFormattedDuration","_ref2","emailTemplateMaxWidth","aspectRatio","emailSpacerWidth","emailSpacerHeight","outlookCircleLeft","outlookCircleTop","outlookPlayLeft","outlookPlayTop","postUrl","INSERT_VIDEO_COMMAND","NODE_TYPE","VideoNode","__duration","__thumbnailSrc","__customThumbnailSrc","__loop","getDuration","setVideoWidth","setVideoHeight","floor","paddedSeconds","String","padStart","formattedDuration","setDuration","setThumbnailSrc","setCustomThumbnailSrc","setLoop","$createVideoNode","$isVideoNode","AudioParser","isKgAudioCard","titleNode","audioNode","thumbnailNode","audioSrc","renderAudioNodeToDOM","frontendTemplate","thumbnailCls","emptyThumbnailCls","cardDiv","emptyThumbnailDiv","svg","createElementNS","path1","path2","path3","audioPlayerContainer","audioElement","audioTitle","audioPlayer","audioPlayIcon","audioPlayIconSvg","playPath","audioPauseIcon","audioPauseIconSvg","rectSvg","rectSvg2","audioDuration","audioDurationTotal","audioDUrationNode","audioSlider","playbackRate","unmuteIcon","unmuteIconSvg","unmutePath","muteIcon","muteIconSvg","mutePath","volumeSlider","INSERT_AUDIO_COMMAND","AudioNode","__mimeType","mimeType","getMimeType","setMimeType","$createAudioNode","$isAudioNode","DEFAULT_NODES","codeblock","video","audio"],"mappings":"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"}