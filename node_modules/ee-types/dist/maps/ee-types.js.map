{"version":3,"sources":["types.js"],"names":[],"mappingsfile":"../ee-types.js","sourcesContent":["(function(root, factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        \n        define(['bower/ee-class/dist/ee-class.min'], factory);\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\n        // Node\n\n        module.exports = factory(require('ee-class'));\n    } else {\n        // EE Namespace\n\n        // create namespace as needed\n        if (typeof root.ee !== 'object') root.ee = {};\n\n        // check for dependencies\n        if (!root.ee.Class) throw new Error('Missing the ee-class module! See https://github.com/eventEmitter/ee-class');\n\n        // publish\n        root.ee.types = factory(root.ee.Class);\n    }\n})(this, function(Class) {\n    'use strict';\n\n    var   Types\n        , types\n        , proto\n        , type\n        ;\n\n\n\n    Types = new Class({\n          string:               function(arg){ return typeof arg === 'string' || Object.prototype.toString.call(arg) === '[object String]'; }\n        , number:               function(arg){ return typeof arg === 'number' || Object.prototype.toString.call(arg) === '[object Number]'; }\n        , boolean:              function(arg){ return typeof arg === 'boolean' || Object.prototype.toString.call(arg) === '[object Boolean]'; }\n        , array:                function(arg){ return Array.isArray(arg); }\n        , intArray:             function(arg){ return types.int8Array(arg) || types.int16Array(arg) || types.int32Array(arg) || types.uInt8Array(arg) || types.uInt16Array(arg) || types.uInt32Array(arg) || types.uInt8ClampedArray(arg); }\n        , floatArray:           function(arg){ return Array.isArray(arg) || types.float32Array(arg); }\n        , object:               function(arg){ return Object.prototype.toString.call(arg) === '[object Object]' && !types.promise(arg);}\n        , someObject:           function(arg){ return /\\[object [^\\]]+\\]/i.test(Object.prototype.toString.call(arg));}\n        , function:             function(arg){ return typeof arg === 'function'; }\n        , symbol:               function(arg){ return typeof arg === 'symbol'; }\n        , date:                 function(arg){ return arg instanceof Date && !isNaN(arg.valueOf()); }\n        , regexp:               function(arg){ return arg instanceof RegExp; }\n        , error:                function(arg){ return arg instanceof Error; }\n        , undefined:            function(arg){ return typeof arg === 'undefined'; }\n        , buffer:               function(arg){ return typeof global === 'object' && typeof global.Buffer === 'function' && global.Buffer.isBuffer(arg); }\n        , null:                 function(arg){ return null === arg || Object.prototype.toString.call(arg) === '[object Null]'; }\n        , arrayBuffer:          function(arg){ return Object.prototype.toString.call(arg) === '[object ArrayBuffer]'; }\n        , map:                  function(arg){ return Object.prototype.toString.call(arg) === '[object Map]'; }\n        , weakMap:              function(arg){ return Object.prototype.toString.call(arg) === '[object WeakMap]'; }\n        , set:                  function(arg){ return Object.prototype.toString.call(arg) === '[object Set]'; }\n        , weakSet:              function(arg){ return Object.prototype.toString.call(arg) === '[object WeakSet]'; }\n        , dataView:             function(arg){ return Object.prototype.toString.call(arg) === '[object DataView]'; }\n        , float32Array:         function(arg){ return Object.prototype.toString.call(arg) === '[object Float32Array]'; }\n        , float64Array:         function(arg){ return Object.prototype.toString.call(arg) === '[object Float64Array]'; }\n        , int8Array:            function(arg){ return Object.prototype.toString.call(arg) === '[object Int8Array]'; }\n        , int16Array:           function(arg){ return Object.prototype.toString.call(arg) === '[object Int16Array]'; }\n        , int32Array:           function(arg){ return Object.prototype.toString.call(arg) === '[object Int32Array]'; }\n        , uInt8Array:           function(arg){ return Object.prototype.toString.call(arg) === '[object Uint8Array]'; }\n        , uInt16Array:          function(arg){ return Object.prototype.toString.call(arg) === '[object Uint16Array]'; }\n        , uInt32Array:          function(arg){ return Object.prototype.toString.call(arg) === '[object Uint32Array]'; }\n        , uInt8ClampedArray:    function(arg){ return Object.prototype.toString.call(arg) === '[object Uint8ClampedArray]'; }\n        , generator:            function(arg){ return Object.prototype.toString.call(arg) === '[object Generator]'; }\n        , promise:              function(arg){ return Object.prototype.toString.call(arg) === '[object Promise]' || (Object.prototype.toString.call(arg) === '[object Object]' && types.function(arg.then) && types.function(arg.catch)); }\n    });\n\n\n\n    // instantiate the singleton\n    types = new Types();\n\n\n\n    // this is the exported method, it returns\n    // the type as string\n    type = function(item) {\n        return types.string(item) ? 'string' :\n               types.number(item) ? 'number' :\n               types.boolean(item) ? 'boolean' :\n               types.object(item) ? 'object' : \n               types.array(item) ? 'array' :\n               types.null(item) ? 'null' :\n               types.undefined(item) ? 'undefined' :\n               types.function(item) ? 'function' :\n               types.date(item) ? 'date' :\n               types.regexp(item) ? 'regexp' :\n               types.error(item) ? 'error' :\n               types.buffer(item) ? 'buffer' :\n               types.symbol(item) ? 'symbol' :\n               types.map(item) ? 'map' :\n               types.weakMap(item) ? 'weakMap' :\n               types.set(item) ? 'set' :\n               types.weakSet(item) ? 'weakSet' :\n               types.promise(item) ? 'promise' :\n               types.dataView(item) ? 'dataView' :\n               types.float32Array(item) ? 'float32Array' :\n               types.float64Array(item) ? 'float64Array' :\n               types.int8Array(item) ? 'int8Array' :\n               types.int16Array(item) ? 'int16Array' :\n               types.int32Array(item) ? 'int32Array' :\n               types.generator(item) ? 'generator' :\n               types.uInt8Array(item) ? 'uInt8Array' :\n               types.uInt16Array(item) ? 'uInt16Array' :\n               types.uInt32Array(item) ? 'uInt32Array' :\n               types.intArray(item) ? 'intArray' :\n               types.floatArray(item) ? 'floatArray' :\n               types.uInt8ClampedArray(item) ? 'uInt8ClampedArray' :\n               types.arrayBuffer(item) ? 'arrayBuffer' :\n               types.someObject(item) ? 'object' : 'unknown';\n    };\n\n\n    // gets its proto\n    proto = Object.getPrototypeOf(types);\n\n\n    // apply the class methods to the type function\n    Object.keys(proto).forEach(function(key){\n        if (!type[key]) type[key] = types[key].bind(types);\n        else throw new Error('Failed to map property «'+key+'» of types to type :(');\n    });\n\n\n    Object.keys(types).forEach(function(key){\n        if (!type[key]) type[key] = types[key];\n        else throw new Error('Failed to map property «'+key+'» of types to type :(');\n    });\n\n\n    return type;\n});\n"]}